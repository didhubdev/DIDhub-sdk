/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WETH, WETHInterface } from "./WETH";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600b60808190526a2bb930b83832b21021272160a91b60a090815261002c9160009190610078565b50604080518082019091526004808252632ba1272160e11b602090920191825261005891600191610078565b506002805460ff1916601217905534801561007257600080fd5b50610153565b82805461008490610127565b90600052602060002090601f0160209004810192826100a657600085556100ec565b82601f106100bf57805160ff19168380011785556100ec565b828001600101855582156100ec579182015b828111156100ec5782518255916020019190600101906100d1565b506100f89291506100fc565b5090565b5b808211156100f857600081556001016100fd565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061013b57607f821691505b60208210810361014d5761014d610111565b50919050565b61088f806101626000396000f3fe60806040526004361061009c5760003560e01c8063313ce56711610064578063313ce5671461015757806370a082311461017e57806395d89b41146101ab578063a9059cbb146101c0578063d0e30db0146101e0578063dd62ed3e146101e857600080fd5b806306fdde03146100a1578063095ea7b3146100cc57806318160ddd146100f957806323b872dd146101155780632e1a7d4d14610135575b600080fd5b3480156100ad57600080fd5b506100b6610220565b6040516100c39190610630565b60405180910390f35b3480156100d857600080fd5b506100ec6100e7366004610685565b6102ae565b6040516100c391906106cc565b34801561010557600080fd5b50475b6040516100c391906106e0565b34801561012157600080fd5b506100ec6101303660046106ee565b610319565b34801561014157600080fd5b5061015561015036600461073e565b61049b565b005b34801561016357600080fd5b506002546101719060ff1681565b6040516100c39190610770565b34801561018a57600080fd5b5061010861019936600461077e565b60036020526000908152604090205481565b3480156101b757600080fd5b506100b661054d565b3480156101cc57600080fd5b506100ec6101db366004610685565b61055a565b61015561056e565b3480156101f457600080fd5b5061010861020336600461079f565b600460209081526000928352604080842090915290825290205481565b6000805461022d906107e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610259906107e8565b80156102a65780601f1061027b576101008083540402835291602001916102a6565b820191906000526020600020905b81548152906001019060200180831161028957829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103079086906106e0565b60405180910390a35060015b92915050565b6001600160a01b03831660009081526003602052604081205482111561033e57600080fd5b6001600160a01b038416331480159061037c57506001600160a01b038416600090815260046020908152604080832033845290915290205460001914155b156103ea576001600160a01b03841660009081526004602090815260408083203384529091529020548211156103b157600080fd5b6001600160a01b0384166000908152600460209081526040808320338452909152812080548492906103e490849061082a565b90915550505b6001600160a01b0384166000908152600360205260408120805484929061041290849061082a565b90915550506001600160a01b0383166000908152600360205260408120805484929061043f908490610841565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161048991906106e0565b60405180910390a35060019392505050565b336000908152600360205260409020548111156104b757600080fd5b33600090815260036020526040812080548392906104d690849061082a565b9091555050604051339082156108fc029083906000818181858888f19350505050158015610508573d6000803e3d6000fd5b50336001600160a01b03167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b658260405161054291906106e0565b60405180910390a250565b6001805461022d906107e8565b6000610567338484610319565b9392505050565b336000908152600360205260408120805434929061058d908490610841565b909155505060405133907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906105c49034906106e0565b60405180910390a2565b60005b838110156105e95781810151838201526020016105d1565b838111156105f8576000848401525b50505050565b6000610608825190565b80845260208401935061061f8185602086016105ce565b601f01601f19169290920192915050565b6020808252810161056781846105fe565b60006001600160a01b038216610313565b61065b81610641565b811461066657600080fd5b50565b803561031381610652565b8061065b565b803561031381610674565b6000806040838503121561069b5761069b600080fd5b60006106a78585610669565b92505060206106b88582860161067a565b9150509250929050565b8015155b82525050565b6020810161031382846106c2565b806106c6565b6020810161031382846106da565b60008060006060848603121561070657610706600080fd5b60006107128686610669565b935050602061072386828701610669565b92505060406107348682870161067a565b9150509250925092565b60006020828403121561075357610753600080fd5b600061075f848461067a565b949350505050565b60ff81166106c6565b602081016103138284610767565b60006020828403121561079357610793600080fd5b600061075f8484610669565b600080604083850312156107b5576107b5600080fd5b60006107c18585610669565b92505060206106b885828601610669565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806107fc57607f821691505b60208210810361080e5761080e6107d2565b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561083c5761083c610814565b500390565b6000821982111561085457610854610814565b50019056fea264697066735822122087fd769a332e88257602a439589338f91217ab5148d2e1e8571c37d8d5a4504964736f6c634300080d0033";

type WETHConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WETHConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WETH__factory extends ContractFactory {
  constructor(...args: WETHConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WETH> {
    return super.deploy(overrides || {}) as Promise<WETH>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WETH {
    return super.attach(address) as WETH;
  }
  connect(signer: Signer): WETH__factory {
    return super.connect(signer) as WETH__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WETHInterface {
    return new utils.Interface(_abi) as WETHInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WETH {
    return new Contract(address, _abi, signerOrProvider) as WETH;
  }
}
