/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BatchTransfer, BatchTransferInterface } from "./BatchTransfer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct BatchTransfer.IToken[]",
        name: "tokens",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "recipients",
        type: "address",
      },
    ],
    name: "batchTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fixedFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct BatchTransfer.IToken[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "hasApproval",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fixedFee",
        type: "uint256",
      },
    ],
    name: "setFixedFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610bb48061007e6000396000f3fe6080604052600436106100705760003560e01c80638da5cb5b1161004e5780638da5cb5b146100e25780638dbfef6d1461010857806391792d5b1461011b578063f2fde38b1461013e57600080fd5b806337de810614610075578063715018a6146100975780637d6c3b2e146100ac575b600080fd5b34801561008157600080fd5b5061009561009036600461068c565b61015e565b005b3480156100a357600080fd5b5061009561016b565b3480156100b857600080fd5b506100cc6100c736600461082a565b61017f565b6040516100d991906108cd565b60405180910390f35b3480156100ee57600080fd5b506000546001600160a01b03166040516100d991906108ee565b6100956101163660046108fc565b61035d565b34801561012757600080fd5b5061013160015481565b6040516100d99190610959565b34801561014a57600080fd5b50610095610159366004610967565b610598565b6101666105d2565b600155565b6101736105d2565b61017d60006105fc565b565b60606000825167ffffffffffffffff81111561019d5761019d6106b5565b6040519080825280602002602001820160405280156101c6578160200160208202803683370190505b50905060005b835181101561035657306001600160a01b03168482815181106101f1576101f1610988565b6020026020010151600001516001600160a01b031663081812fc86848151811061021d5761021d610988565b6020026020010151602001516040518263ffffffff1660e01b81526004016102459190610959565b602060405180830381865afa158015610262573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028691906109a9565b6001600160a01b0316148061032257508381815181106102a8576102a8610988565b6020026020010151600001516001600160a01b031663e985e9c533306040518363ffffffff1660e01b81526004016102e19291906109ca565b602060405180830381865afa1580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032291906109f8565b82828151811061033457610334610988565b911515602092830291909101909101528061034e81610a2f565b9150506101cc565b5092915050565b6103663461064c565b60005b825181101561059357306001600160a01b031683828151811061038e5761038e610988565b6020026020010151600001516001600160a01b031663081812fc8584815181106103ba576103ba610988565b6020026020010151602001516040518263ffffffff1660e01b81526004016103e29190610959565b602060405180830381865afa1580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042391906109a9565b6001600160a01b031614806104bf575082818151811061044557610445610988565b6020026020010151600001516001600160a01b031663e985e9c533306040518363ffffffff1660e01b815260040161047e9291906109ca565b602060405180830381865afa15801561049b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104bf91906109f8565b6104e45760405162461bcd60e51b81526004016104db90610a7a565b60405180910390fd5b8281815181106104f6576104f6610988565b6020026020010151600001516001600160a01b03166323b872dd338486858151811061052457610524610988565b6020026020010151602001516040518463ffffffff1660e01b815260040161054e93929190610a8a565b600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b50505050808061058b90610a2f565b915050610369565b505050565b6105a06105d2565b6001600160a01b0381166105c65760405162461bcd60e51b81526004016104db90610ab2565b6105cf816105fc565b50565b6000546001600160a01b0316331461017d5760405162461bcd60e51b81526004016104db90610b2c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001548110156105cf5760405162461bcd60e51b81526004016104db90610b6e565b805b81146105cf57600080fd5b80356106868161066e565b92915050565b6000602082840312156106a1576106a1600080fd5b60006106ad848461067b565b949350505050565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156106f1576106f16106b5565b6040525050565b600061070360405190565b905061070f82826106cb565b919050565b600067ffffffffffffffff82111561072e5761072e6106b5565b5060209081020190565b60006001600160a01b038216610686565b61067081610738565b803561068681610749565b60006040828403121561077257610772600080fd5b61077c60406106f8565b9050600061078a8484610752565b90820152602061079c8484830161067b565b9082015292915050565b60006107b96107b484610714565b6106f8565b838152905060208101604084028301858111156107d8576107d8600080fd5b835b818110156107fc576107ec878261075d565b83526020909201916040016107da565b5050509392505050565b600082601f83011261081a5761081a600080fd5b81356106ad8482602086016107a6565b60006020828403121561083f5761083f600080fd5b813567ffffffffffffffff81111561085957610859600080fd5b6106ad84828501610806565b8015155b82525050565b6108798282610865565b5060200190565b60200190565b6000610890825190565b808452602093840193830160005b828110156108c35781516108b2878261086f565b96505060208201915060010161089e565b5093949350505050565b602080825281016108de8184610886565b9392505050565b61086981610738565b6020810161068682846108e5565b6000806040838503121561091257610912600080fd5b823567ffffffffffffffff81111561092c5761092c600080fd5b61093885828601610806565b925050602061094985828601610752565b9150509250929050565b80610869565b602081016106868284610953565b60006020828403121561097c5761097c600080fd5b60006106ad8484610752565b634e487b7160e01b600052603260045260246000fd5b805161068681610749565b6000602082840312156109be576109be600080fd5b60006106ad848461099e565b604081016109d882856108e5565b6108de60208301846108e5565b801515610670565b8051610686816109e5565b600060208284031215610a0d57610a0d600080fd5b60006106ad84846109ed565b634e487b7160e01b600052601160045260246000fd5b600060018201610a4157610a41610a19565b5060010190565b601b8152602081017f42617463685472616e736665723a204e6f7420617070726f766564000000000081529050610880565b6020808252810161068681610a48565b60608101610a9882866108e5565b610aa560208301856108e5565b6106ad6040830184610953565b6020808252810161068681602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201526564647265737360d01b604082015260600190565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152610880565b6020808252810161068681610afc565b601a8152602081017f46697865644665653a20496e73756666696963656e742046656500000000000081529050610880565b6020808252810161068681610b3c56fea2646970667358221220fb14a10181822dd946246c8c5fdae9d544d118485e333611c50b1bc2f13d80c864736f6c634300080d0033";

type BatchTransferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchTransferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchTransfer__factory extends ContractFactory {
  constructor(...args: BatchTransferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchTransfer> {
    return super.deploy(overrides || {}) as Promise<BatchTransfer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BatchTransfer {
    return super.attach(address) as BatchTransfer;
  }
  connect(signer: Signer): BatchTransfer__factory {
    return super.connect(signer) as BatchTransfer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchTransferInterface {
    return new utils.Interface(_abi) as BatchTransferInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchTransfer {
    return new Contract(address, _abi, signerOrProvider) as BatchTransfer;
  }
}
