/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BatchRegister, BatchRegisterInterface } from "./BatchRegister";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "contract ISwapRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract IQuoterV2",
        name: "_quoter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "names",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "durations",
        type: "uint256[]",
      },
    ],
    name: "BatchRegisterDomain",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "approveToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
              },
            ],
            internalType: "struct Data.DomainInfo[]",
            name: "domains",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "secret",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct Data.RegistrationInfo[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    name: "batchCheckAvailability",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            internalType: "bool[]",
            name: "status",
            type: "bool[]",
          },
        ],
        internalType: "struct Data.AvalibilityStatusResponse[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Data.CommitmentInfo[]",
        name: "commitmentInfo",
        type: "tuple[]",
      },
    ],
    name: "batchCheckCommitments",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            internalType: "uint8[]",
            name: "status",
            type: "uint8[]",
          },
        ],
        internalType: "struct Data.CommitmentStatusResponse[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
              },
            ],
            internalType: "struct Data.DomainInfo[]",
            name: "domains",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "secret",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct Data.RegistrationInfo[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    name: "batchCheckRegistration",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            internalType: "bool[]",
            name: "status",
            type: "bool[]",
          },
        ],
        internalType: "struct Data.RegistrationStatusResponse[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Data.CommitmentInfo[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    name: "batchCommit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
              },
            ],
            internalType: "struct Data.DomainInfo[]",
            name: "domains",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "secret",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct Data.RegistrationInfo[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    name: "batchMakeCommitment",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "commitments",
            type: "bytes32[]",
          },
        ],
        internalType: "struct Data.CommitmentInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
              },
            ],
            internalType: "struct Data.DomainInfo[]",
            name: "domains",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "secret",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct Data.RegistrationInfo[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    name: "batchRegister",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
              },
            ],
            internalType: "struct Data.DomainInfo[]",
            name: "domains",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "secret",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct Data.RegistrationInfo[]",
        name: "requests",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "batchRegisterERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBasisPt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeFixed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
              },
            ],
            internalType: "struct Data.DomainInfo[]",
            name: "domains",
            type: "tuple[]",
          },
        ],
        internalType: "struct Data.PriceRequest[]",
        name: "requests",
        type: "tuple[]",
      },
    ],
    name: "getIndividualPrices",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "price",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
            ],
            internalType: "struct Data.DomainPriceInfo[]",
            name: "prices",
            type: "tuple[]",
          },
        ],
        internalType: "struct Data.ProjectPriceResponse[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "project",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "duration",
                type: "uint256",
              },
            ],
            internalType: "struct Data.DomainInfo[]",
            name: "domains",
            type: "tuple[]",
          },
        ],
        internalType: "struct Data.PriceRequest[]",
        name: "requests",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "getTotalPrice",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registrarProxies",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "project",
        type: "address",
      },
      {
        internalType: "address",
        name: "registrarProxy",
        type: "address",
      },
    ],
    name: "setRegistrarProxy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_feeFixed",
        type: "uint256",
      },
    ],
    name: "updateFeeFixed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feeBasisPt",
        type: "uint256",
      },
    ],
    name: "updateFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "";

type BatchRegisterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchRegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchRegister__factory extends ContractFactory {
  constructor(...args: BatchRegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _weth: string,
    _router: string,
    _quoter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchRegister> {
    return super.deploy(
      _weth,
      _router,
      _quoter,
      overrides || {}
    ) as Promise<BatchRegister>;
  }
  getDeployTransaction(
    _weth: string,
    _router: string,
    _quoter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_weth, _router, _quoter, overrides || {});
  }
  attach(address: string): BatchRegister {
    return super.attach(address) as BatchRegister;
  }
  connect(signer: Signer): BatchRegister__factory {
    return super.connect(signer) as BatchRegister__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchRegisterInterface {
    return new utils.Interface(_abi) as BatchRegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchRegister {
    return new Contract(address, _abi, signerOrProvider) as BatchRegister;
  }
}
