/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BatchENSManager,
  BatchENSManagerInterface,
} from "./BatchENSManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nameWrapperContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_baseRegistrarContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "batchUnwrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "datas",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "batchWrap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fixedFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "hasApproval",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "hasApprovalNameWrapper",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "isWrapped",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fixedFee",
        type: "uint256",
      },
    ],
    name: "setFixedFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200188938038062001889833981016040819052620000349162000141565b6200003f33620000b7565b6001600160a01b03808316608081905290821660a05260405163a22cb46560e01b815263a22cb465906200007b9083906001906004016200019e565b600060405180830381600087803b1580156200009657600080fd5b505af1158015620000ab573d6000803e3d6000fd5b505050505050620001c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b620001258162000107565b81146200013157600080fd5b50565b805162000114816200011a565b60008060408385031215620001595762000159600080fd5b600062000167858562000134565b92505060206200017a8582860162000134565b9150509250929050565b6200018f8162000107565b82525050565b8015156200018f565b60408101620001ae828562000184565b620001bd602083018462000195565b9392505050565b60805160a05161165962000230600039600081816102af0152818161037a015281816108d20152818161099d0152610a330152600081816104a101528181610546015281816105e50152818161074b015281816107f001528181610a630152610c0401526116596000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b1461018557806391792d5b146101ab578063dee48382146101ce578063f23a6e61146101e1578063f2fde38b1461020e578063fc51f60f1461022e57600080fd5b806310c86474146100ac57806312286760146100e2578063150b7a02146100f757806337de8106146101305780636657448d14610150578063715018a614610170575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004610ea2565b61024e565b6040516100d99190610f44565b60405180910390f35b6100f56100f0366004610f81565b61042d565b005b34801561010357600080fd5b50610123610112366004611028565b630a85bd0160e11b95945050505050565b6040516100d991906110bb565b34801561013c57600080fd5b506100f561014b3660046110c9565b61069a565b34801561015c57600080fd5b506100cc61016b366004610ea2565b6106a7565b34801561017c57600080fd5b506100f561089d565b34801561019157600080fd5b506000546001600160a01b03166040516100d991906110f3565b3480156101b757600080fd5b506101c160015481565b6040516100d99190611107565b6100f56101dc36600461123b565b6108b1565b3480156101ed57600080fd5b506101236101fc3660046112be565b63f23a6e6160e01b9695505050505050565b34801561021a57600080fd5b506100f5610229366004611353565b610b20565b34801561023a57600080fd5b506100cc610249366004610ea2565b610b5a565b6060600082516001600160401b0381111561026b5761026b610d7f565b604051908082528060200260200182016040528015610294578160200160208202803683370190505b50905060005b835181101561042657306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663081812fc8684815181106102ee576102ee611374565b60200260200101516040518263ffffffff1660e01b81526004016103129190611107565b602060405180830381865afa15801561032f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103539190611395565b6001600160a01b031614806103f2575060405163e985e9c560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e985e9c5906103b190339030906004016113b6565b602060405180830381865afa1580156103ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f291906113e4565b82828151811061040457610404611374565b911515602092830291909101909101528061041e8161141b565b91505061029a565b5092915050565b61043634610caf565b60005b825181101561069557600061048d7f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b85848151811061047d5761047d611374565b602002602001015160001b610cd1565b60405163020604bf60e21b815290915030907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063081812fc906104de908590600401611107565b602060405180830381865afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190611395565b6001600160a01b031614806105be575060405163e985e9c560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e985e9c59061057d90869030906004016113b6565b602060405180830381865afa15801561059a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105be91906113e4565b6105e35760405162461bcd60e51b81526004016105da90611466565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638b4dfa7585848151811061062457610624611374565b602002602001015160001b85866040518463ffffffff1660e01b815260040161064f93929190611476565b600060405180830381600087803b15801561066957600080fd5b505af115801561067d573d6000803e3d6000fd5b5050505050808061068d9061141b565b915050610439565b505050565b6106a2610d05565b600155565b6060600082516001600160401b038111156106c4576106c4610d7f565b6040519080825280602002602001820160405280156106ed578160200160208202803683370190505b50905060005b83518110156104265760006107377f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b86848151811061047d5761047d611374565b60405163020604bf60e21b815290915030907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063081812fc90610788908590600401611107565b602060405180830381865afa1580156107a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c99190611395565b6001600160a01b03161480610868575060405163e985e9c560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e985e9c59061082790339030906004016113b6565b602060405180830381865afa158015610844573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086891906113e4565b83838151811061087a5761087a611374565b9115156020928302919091019091015250806108958161141b565b9150506106f3565b6108a5610d05565b6108af6000610d2f565b565b6108ba34610caf565b60005b8351811015610b1a57306001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663081812fc86848151811061091157610911611374565b60200260200101516040518263ffffffff1660e01b81526004016109359190611107565b602060405180830381865afa158015610952573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109769190611395565b6001600160a01b03161480610a15575060405163e985e9c560e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e985e9c5906109d490859030906004016113b6565b602060405180830381865afa1580156109f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1591906113e4565b610a315760405162461bcd60e51b81526004016105da90611466565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b88d4fde837f0000000000000000000000000000000000000000000000000000000000000000878581518110610a9457610a94611374565b6020026020010151878681518110610aae57610aae611374565b60200260200101516040518563ffffffff1660e01b8152600401610ad594939291906114fc565b600060405180830381600087803b158015610aef57600080fd5b505af1158015610b03573d6000803e3d6000fd5b505050508080610b129061141b565b9150506108bd565b50505050565b610b28610d05565b6001600160a01b038116610b4e5760405162461bcd60e51b81526004016105da90611540565b610b5781610d2f565b50565b6060600082516001600160401b03811115610b7757610b77610d7f565b604051908082528060200260200182016040528015610ba0578160200160208202803683370190505b50905060005b8351811015610426576000610bea7f93cdeb708b7545dc668eb9280176169d1c33cfd8ed6f04690a0bcc88a93fc4ae60001b86848151811061047d5761047d611374565b60405163fd0cd0d960e01b81529091506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063fd0cd0d990610c39908490600401611107565b602060405180830381865afa158015610c56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7a91906113e4565b838381518110610c8c57610c8c611374565b911515602092830291909101909101525080610ca78161141b565b915050610ba6565b600154811015610b575760405162461bcd60e51b81526004016105da906115bc565b60008282604051602001610ce69291906115cc565b6040516020818303038152906040528051906020012090505b92915050565b6000546001600160a01b031633146108af5760405162461bcd60e51b81526004016105da90611613565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715610dba57610dba610d7f565b6040525050565b6000610dcc60405190565b9050610dd88282610d95565b919050565b60006001600160401b03821115610df657610df6610d7f565b5060209081020190565b805b8114610b5757600080fd5b8035610cff81610e00565b6000610e2b610e2684610ddd565b610dc1565b83815290506020808201908402830185811115610e4a57610e4a600080fd5b835b81811015610e6c57610e5e8782610e0d565b835260209283019201610e4c565b5050509392505050565b600082601f830112610e8a57610e8a600080fd5b8135610e9a848260208601610e18565b949350505050565b600060208284031215610eb757610eb7600080fd5b81356001600160401b03811115610ed057610ed0600080fd5b610e9a84828501610e76565b8015155b82525050565b610ef08282610edc565b5060200190565b60200190565b6000610f07825190565b808452602093840193830160005b82811015610f3a578151610f298782610ee6565b965050602082019150600101610f15565b5093949350505050565b60208082528101610f558184610efd565b9392505050565b60006001600160a01b038216610cff565b610e0281610f5c565b8035610cff81610f6d565b60008060408385031215610f9757610f97600080fd5b82356001600160401b03811115610fb057610fb0600080fd5b610fbc85828601610e76565b9250506020610fcd85828601610f76565b9150509250929050565b60008083601f840112610fec57610fec600080fd5b5081356001600160401b0381111561100657611006600080fd5b60208301915083600182028301111561102157611021600080fd5b9250929050565b60008060008060006080868803121561104357611043600080fd5b600061104f8888610f76565b955050602061106088828901610f76565b945050604061107188828901610e0d565b93505060608601356001600160401b0381111561109057611090600080fd5b61109c88828901610fd7565b92509250509295509295909350565b6001600160e01b03198116610ee0565b60208101610cff82846110ab565b6000602082840312156110de576110de600080fd5b6000610e9a8484610e0d565b610ee081610f5c565b60208101610cff82846110ea565b80610ee0565b60208101610cff8284611101565b60006001600160401b0382111561112e5761112e610d7f565b601f19601f8301165b60200192915050565b82818337506000910152565b600061115a610e2684611115565b90508281526020810184848401111561117557611175600080fd5b611180848285611140565b509392505050565b600082601f83011261119c5761119c600080fd5b8135610e9a84826020860161114c565b60006111ba610e2684610ddd565b838152905060208082019084028301858111156111d9576111d9600080fd5b835b81811015610e6c5780356001600160401b038111156111fc576111fc600080fd5b85016112088882611188565b845250602092830192016111db565b600082601f83011261122b5761122b600080fd5b8135610e9a8482602086016111ac565b60008060006060848603121561125357611253600080fd5b83356001600160401b0381111561126c5761126c600080fd5b61127886828701610e76565b93505060208401356001600160401b0381111561129757611297600080fd5b6112a386828701611217565b92505060406112b486828701610f76565b9150509250925092565b60008060008060008060a087890312156112da576112da600080fd5b60006112e68989610f76565b96505060206112f789828a01610f76565b955050604061130889828a01610e0d565b945050606061131989828a01610e0d565b93505060808701356001600160401b0381111561133857611338600080fd5b61134489828a01610fd7565b92509250509295509295509295565b60006020828403121561136857611368600080fd5b6000610e9a8484610f76565b634e487b7160e01b600052603260045260246000fd5b8051610cff81610f6d565b6000602082840312156113aa576113aa600080fd5b6000610e9a848461138a565b604081016113c482856110ea565b610f5560208301846110ea565b801515610e02565b8051610cff816113d1565b6000602082840312156113f9576113f9600080fd5b6000610e9a84846113d9565b634e487b7160e01b600052601160045260246000fd5b60006001820161142d5761142d611405565b5060010190565b601d8152602081017f4261746368454e534d616e616765723a204e6f7420617070726f76656400000081529050610ef7565b60208082528101610cff81611434565b606081016114848286611101565b61149160208301856110ea565b610e9a60408301846110ea565b60005b838110156114b95781810151838201526020016114a1565b83811115610b1a5750506000910152565b60006114d4825190565b8084526020840193506114eb81856020860161149e565b601f01601f19169290920192915050565b6080810161150a82876110ea565b61151760208301866110ea565b6115246040830185611101565b818103606083015261153681846114ca565b9695505050505050565b60208082528101610cff81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201526564647265737360d01b604082015260600190565b601a8152602081017f46697865644665653a20496e73756666696963656e742046656500000000000081529050610ef7565b60208082528101610cff8161158a565b6115d68184611101565b6020016111378183611101565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152610ef7565b60208082528101610cff816115e356fea2646970667358221220457732295dd37e80c27719f85130d9ed8498830471350633acfb6cd3c866a22864736f6c634300080d0033";

type BatchENSManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchENSManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchENSManager__factory extends ContractFactory {
  constructor(...args: BatchENSManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _nameWrapperContract: string,
    _baseRegistrarContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchENSManager> {
    return super.deploy(
      _nameWrapperContract,
      _baseRegistrarContract,
      overrides || {}
    ) as Promise<BatchENSManager>;
  }
  getDeployTransaction(
    _nameWrapperContract: string,
    _baseRegistrarContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _nameWrapperContract,
      _baseRegistrarContract,
      overrides || {}
    );
  }
  attach(address: string): BatchENSManager {
    return super.attach(address) as BatchENSManager;
  }
  connect(signer: Signer): BatchENSManager__factory {
    return super.connect(signer) as BatchENSManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchENSManagerInterface {
    return new utils.Interface(_abi) as BatchENSManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchENSManager {
    return new Contract(address, _abi, signerOrProvider) as BatchENSManager;
  }
}
