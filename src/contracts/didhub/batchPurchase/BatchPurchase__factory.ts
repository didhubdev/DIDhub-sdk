/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BatchPurchase, BatchPurchaseInterface } from "./BatchPurchase";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract IQuoterV2",
        name: "_quoter",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_defaultSwapFee",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IFT[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "batchCheckSeaportApprovalERC20",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct INFT[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "batchCheckSeaportApprovalERC721orERC1155",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultSwapFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "advancedOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "offerFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "considerationFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountInMax",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
            ],
            internalType: "struct Data.SwapPrice[]",
            name: "prices",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
        ],
        internalType: "struct Data.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "fulfillerConduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maximumFulfilled",
        type: "uint256",
      },
    ],
    name: "fulfillAvailableAdvancedOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "advancedOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "offerFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "considerationFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountInMax",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
            ],
            internalType: "struct Data.SwapPrice[]",
            name: "prices",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
        ],
        internalType: "struct Data.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "fulfillerConduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maximumFulfilled",
        type: "uint256",
      },
    ],
    name: "fulfillAvailableAdvancedOrdersERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
        ],
        internalType: "struct Data.DomainPriceInfo[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "getIndividualPrice",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
        ],
        internalType: "struct Data.DomainPriceInfo[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "getTotalPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "swapFee",
        type: "uint24",
      },
    ],
    name: "setSpecificSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "specificSwapFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e0604052731e0049783f008a0085193e00003d00cd54003c716080526cadc04c56bf30ac9d3c0aaf14dc60a081905260c0526000196004553480156200004557600080fd5b5060405162003da238038062003da283398101604081905262000068916200018a565b83836200007533620000da565b600180546001600160a01b03199081166001600160a01b039485161790915560028054909116918316919091179055600680546001600160b81b0319166301000000949092169390930262ffffff19161762ffffff9190911617905550620001f89050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b600062000137826200012a565b62000155816200013d565b81146200016157600080fd5b50565b805162000137816200014a565b62ffffff811662000155565b8051620001378162000171565b60008060008060808587031215620001a557620001a5600080fd5b6000620001b3878762000164565b9450506020620001c68782880162000164565b9350506040620001d98782880162000164565b9250506060620001ec878288016200017d565b91505092959194509250565b60805160a05160c051613b506200025260003960008181610329015261054401526000818161076d01528181610d6e0152610e7c0152600081816111d7015281816112880152818161174c01526117fd0152613b506000f3fe6080604052600436106100e05760003560e01c8063827130841161007f578063dc1ff86011610059578063dc1ff8601461028d578063f2fde38b146102ba578063f3fef3a3146102da578063f5b90444146102fa57600080fd5b806382713084146101fd5780638da5cb5b1461023a578063b25326c91461026057600080fd5b8063715018a6116100bb578063715018a61461015357806375e02b98146101685780637abc76dd146101885780637e0fc3ca146101b557600080fd5b8062f43ead146100ec57806303df739614610101578063114ee9bb1461013357600080fd5b366100e757005b600080fd5b6100ff6100fa3660046123af565b61031a565b005b34801561010d57600080fd5b5060065461011d9062ffffff1681565b60405161012a9190612502565b60405180910390f35b34801561013f57600080fd5b506100ff61014e3660046123af565b61041a565b34801561015f57600080fd5b506100ff61066f565b34801561017457600080fd5b506100ff610183366004612526565b610683565b34801561019457600080fd5b506101a86101a336600461262a565b6106cb565b60405161012a91906126ca565b3480156101c157600080fd5b506101f06101d03660046126db565b600360209081526000928352604080842090915290825290205460ff1681565b60405161012a9190612718565b34801561020957600080fd5b5061011d6102183660046126db565b600560209081526000928352604080842090915290825290205462ffffff1681565b34801561024657600080fd5b506000546001600160a01b031660405161012a919061272f565b34801561026c57600080fd5b5061028061027b3660046127f1565b610827565b60405161012a9190612832565b34801561029957600080fd5b506102ad6102a83660046127f1565b610a0a565b60405161012a9190612887565b3480156102c657600080fd5b506100ff6102d5366004612898565b610c24565b3480156102e657600080fd5b506100ff6102f53660046128b9565b610c5e565b34801561030657600080fd5b506101a8610315366004612961565b610d17565b600061032585610fef565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387201b4182602001518f8f8f8f8f8f8f8f8e8e8e6040518d63ffffffff1660e01b815260040161038c9b9a9998979695949392919061330e565b60006040518083038185885af11580156103aa573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526103d39190810190613588565b505080511561040b578051604051339180156108fc02916000818181858888f19350505050158015610409573d6000803e3d6000fd5b505b50505050505050505050505050565b836040015184602001516001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b81526004016104519291906135ee565b602060405180830381865afa15801561046e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104929190613609565b11156104b95760405162461bcd60e51b81526004016104b09061366a565b60405180910390fd5b83602001516001600160a01b03166323b872dd333087604001516040518463ffffffff1660e01b81526004016104f19392919061367a565b6020604051808303816000875af1158015610510573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053491906136a2565b5060006105408561165e565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387201b4182602001518f8f8f8f8f8f8f8f8e8e8e6040518d63ffffffff1660e01b81526004016105a79b9a9998979695949392919061330e565b60006040518083038185885af11580156105c5573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526105ee9190810190613588565b505080511561040b576020850151815160405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb9161062c913391906004016136c3565b6020604051808303816000875af115801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040991906136a2565b610677611c47565b6106816000611c71565b565b61068b611c47565b6001600160a01b03928316600090815260056020908152604080832094909516825292909252919020805462ffffff191662ffffff909216919091179055565b6060600082516001600160401b038111156106e8576106e86121a9565b604051908082528060200260200182016040528015610711578160200160208202803683370190505b50905060005b835181101561082057838181518110610732576107326136de565b602002602001015160200151848281518110610750576107506136de565b6020026020010151600001516001600160a01b031663dd62ed3e337f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016107a99291906135ee565b602060405180830381865afa1580156107c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ea9190613609565b10158282815181106107fe576107fe6136de565b91151560209283029190910190910152806108188161370a565b915050610717565b5092915050565b600080805b8451811015610a00576000858281518110610849576108496136de565b60200260200101519050846001600160a01b031681602001516001600160a01b0316141580156108a5575060208101516001600160a01b03161580156108a357506006546001600160a01b03868116630100000090920416145b155b80156108de575060065460208201516001600160a01b039081166301000000909204161480156108dc57506001600160a01b038516155b155b156109de5760006001600160a01b038616156108fa578561090e565b600654630100000090046001600160a01b03165b60208301519091506000906001600160a01b031615610931578260200151610945565b600654630100000090046001600160a01b03165b6001600160a01b0380841660009081526005602090815260408083209385168352929052908120549192509062ffffff166109875760065462ffffff166109b3565b6001600160a01b0380841660009081526005602090815260408083209386168352929052205462ffffff165b905060006109c78484876000015185611cc1565b90506109d38188613723565b9650505050506109ed565b80516109ea9084613723565b92505b50806109f88161370a565b91505061082c565b5090505b92915050565b6060600083516001600160401b03811115610a2757610a276121a9565b604051908082528060200260200182016040528015610a50578160200160208202803683370190505b50905060005b8451811015610a00576000858281518110610a7357610a736136de565b60200260200101519050846001600160a01b031681602001516001600160a01b031614158015610acf575060208101516001600160a01b0316158015610acd57506006546001600160a01b03868116630100000090920416145b155b15610be25760006001600160a01b03861615610aeb5785610aff565b600654630100000090046001600160a01b03165b60208301519091506000906001600160a01b031615610b22578260200151610b36565b600654630100000090046001600160a01b03165b6001600160a01b0380841660009081526005602090815260408083209385168352929052908120549192509062ffffff16610b785760065462ffffff16610ba4565b6001600160a01b0380841660009081526005602090815260408083209386168352929052205462ffffff165b90506000610bb88484876000015185611cc1565b905080878781518110610bcd57610bcd6136de565b60200260200101818152505050505050610c11565b8060000151838381518110610bf957610bf96136de565b60200260200101818151610c0d9190613723565b9052505b5080610c1c8161370a565b915050610a56565b610c2c611c47565b6001600160a01b038116610c525760405162461bcd60e51b81526004016104b09061377c565b610c5b81611c71565b50565b610c66611c47565b6001600160a01b038216610ca657604051339082156108fc029083906000818181858888f19350505050158015610ca1573d6000803e3d6000fd5b505050565b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb90610cd490339085906004016136c3565b6020604051808303816000875af1158015610cf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca191906136a2565b6060600082516001600160401b03811115610d3457610d346121a9565b604051908082528060200260200182016040528015610d5d578160200160208202803683370190505b50905060005b8351811015610820577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316848281518110610da857610da86136de565b6020026020010151600001516001600160a01b031663081812fc868481518110610dd457610dd46136de565b6020026020010151602001516040518263ffffffff1660e01b8152600401610dfc9190612832565b602060405180830381865afa158015610e19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3d919061378c565b6001600160a01b03161480610ef95750838181518110610e5f57610e5f6136de565b6020026020010151600001516001600160a01b031663e985e9c5337f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610eb89291906135ee565b602060405180830381865afa158015610ed5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef991906136a2565b80610fbb5750336001600160a01b0316848281518110610f1b57610f1b6136de565b6020026020010151600001516001600160a01b0316636352211e868481518110610f4757610f476136de565b6020026020010151602001516040518263ffffffff1660e01b8152600401610f6f9190612832565b602060405180830381865afa158015610f8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb0919061378c565b6001600160a01b0316145b828281518110610fcd57610fcd6136de565b9115156020928302919091019091015280610fe78161370a565b915050610d63565b604080518082019091526000808252602082015281513490600080805b83518110156115c557838181518110611027576110276136de565b6020026020010151602001518510156110525760405162461bcd60e51b81526004016104b0906137eb565b600660039054906101000a90046001600160a01b03166001600160a01b0316848281518110611083576110836136de565b6020026020010151604001516001600160a01b03160361115357600660039054906101000a90046001600160a01b03166001600160a01b031663d0e30db08583815181106110d3576110d36136de565b6020026020010151600001516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561110a57600080fd5b505af115801561111e573d6000803e3d6000fd5b5050505050838181518110611135576111356136de565b6020026020010151600001518561114c91906137fb565b94506115b3565b60006001600160a01b0316848281518110611170576111706136de565b6020026020010151604001516001600160a01b03161461155c5783818151811061119c5761119c6136de565b6020026020010151602001518482815181106111ba576111ba6136de565b6020026020010151604001516001600160a01b031663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016112139291906135ee565b602060405180830381865afa158015611230573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112549190613609565b101561130c5783818151811061126c5761126c6136de565b6020026020010151604001516001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006004546040518363ffffffff1660e01b81526004016112c79291906136c3565b6020604051808303816000875af11580156112e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130a91906136a2565b505b600660039054906101000a90046001600160a01b03166001600160a01b031663d0e30db0858381518110611342576113426136de565b6020026020010151602001516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561137957600080fd5b505af115801561138d573d6000803e3d6000fd5b5050600654630100000090046001600160a01b031660009081526005602052604081208851919450849350915082908890869081106113ce576113ce6136de565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff161161140e5760065462ffffff16611475565b600654630100000090046001600160a01b031660009081526005602052604081208651909190879085908110611446576114466136de565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff165b905060006114f3600660039054906101000a90046001600160a01b03168785815181106114a4576114a46136de565b6020026020010151604001518886815181106114c2576114c26136de565b6020026020010151602001518987815181106114e0576114e06136de565b6020026020010151600001513087611d7d565b905080868481518110611508576115086136de565b60200260200101516020015161151e91906137fb565b6115289085613723565b935085838151811061153c5761153c6136de565b6020026020010151602001518761155391906137fb565b965050506115b3565b83818151811061156e5761156e6136de565b6020026020010151600001518561158591906137fb565b9450838181518110611599576115996136de565b602002602001015160000151836115b09190613723565b92505b806115bd8161370a565b91505061100c565b50801561163557600654604051632e1a7d4d60e01b815263010000009091046001600160a01b031690632e1a7d4d90611602908490600401612832565b600060405180830381600087803b15801561161c57600080fd5b505af1158015611630573d6000803e3d6000fd5b505050505b6040518060400160405280828661164c9190613723565b81526020019290925250949350505050565b60408051808201909152600080825260208201526040820151602083015183516000805b8251811015611c2b5782818151811061169d5761169d6136de565b6020026020010151602001518510156116c85760405162461bcd60e51b81526004016104b0906137eb565b60006001600160a01b03168382815181106116e5576116e56136de565b6020026020010151604001516001600160a01b03161461188157828181518110611711576117116136de565b60200260200101516020015183828151811061172f5761172f6136de565b6020026020010151604001516001600160a01b031663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016117889291906135ee565b602060405180830381865afa1580156117a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c99190613609565b1015611881578281815181106117e1576117e16136de565b6020026020010151604001516001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006004546040518363ffffffff1660e01b815260040161183c9291906136c3565b6020604051808303816000875af115801561185b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061187f91906136a2565b505b60006001600160a01b031683828151811061189e5761189e6136de565b6020026020010151604001516001600160a01b031603611aaf576006546001600160a01b03858116630100000090920416146119b5576001600160a01b0380851660009081526005602090815260408083206006546301000000900490941683529290529081205462ffffff1661191c5760065462ffffff16611952565b6001600160a01b038086166000908152600560209081526040808320600654630100000090049094168352929052205462ffffff165b905060006119a086600660039054906101000a90046001600160a01b0316878681518110611982576119826136de565b6020026020010151602001518887815181106114e0576114e06136de565b90506119ac8782611f56565b965050506119e8565b6119e58382815181106119ca576119ca6136de565b60200260200101516000015186611f5690919063ffffffff16565b94505b600660039054906101000a90046001600160a01b03166001600160a01b0316632e1a7d4d848381518110611a1e57611a1e6136de565b6020026020010151600001516040518263ffffffff1660e01b8152600401611a469190612832565b600060405180830381600087803b158015611a6057600080fd5b505af1158015611a74573d6000803e3d6000fd5b50505050611aa8838281518110611a8d57611a8d6136de565b60200260200101516000015183611f6990919063ffffffff16565b9150611c19565b836001600160a01b0316838281518110611acb57611acb6136de565b6020026020010151604001516001600160a01b031603611b0157611afa8382815181106119ca576119ca6136de565b9450611c19565b6001600160a01b038416600090815260056020526040812084518291908290879086908110611b3257611b326136de565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff1611611b725760065462ffffff16611bd0565b6001600160a01b03851660009081526005602052604081208551909190869085908110611ba157611ba16136de565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff165b90506000611c0886868581518110611bea57611bea6136de565b602002602001015160400151878681518110611982576119826136de565b9050611c148782611f56565b965050505b80611c238161370a565b915050611682565b5060408051808201909152938452602084015250909392505050565b6000546001600160a01b031633146106815760405162461bcd60e51b81526004016104b090613842565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002546040805160a0810182526001600160a01b038781168252868116602083015281830186905262ffffff851660608301526000608083018190529251635e90b82560e11b815292938493849384938493169163bd21704a91611d27916004016138b9565b6080604051808303816000875af1158015611d46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d6a91906138f8565b509196505050505050505b949350505050565b6000808511611d9e5760405162461bcd60e51b81526004016104b090613987565b6040516370a0823160e01b815285906001600160a01b038916906370a0823190611dcc90309060040161272f565b602060405180830381865afa158015611de9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0d9190613609565b1015611e2b5760405162461bcd60e51b81526004016104b0906139c0565b600154611e439088906001600160a01b031687611f75565b6000611e5042600f613723565b60408051610100810182526001600160a01b03808c1682528a8116602083015262ffffff87168284015287811660608301526080820184905260a0820189905260c082018a9052600060e083018190526001549351631b67c43360e31b8152949550939192849291169063db3e219890611ece908590600401613a61565b6020604051808303816000875af1158015611eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f119190613609565b905088811015611f4857600154611f34908c906001600160a01b03166000611f75565b611f488b30611f43848d6137fb565b61206a565b9a9950505050505050505050565b6000611f6282846137fb565b9392505050565b6000611f628284613723565b600080846001600160a01b031663095ea7b360e01b8585604051602401611f9d9291906136c3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611fdb9190613ac2565b6000604051808303816000865af19150503d8060008114612018576040519150601f19603f3d011682016040523d82523d6000602084013e61201d565b606091505b509150915081801561204757508051158061204757508080602001905181019061204791906136a2565b6120635760405162461bcd60e51b81526004016104b090613ae3565b5050505050565b600080846001600160a01b031663a9059cbb60e01b85856040516024016120929291906136c3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516120d09190613ac2565b6000604051808303816000865af19150503d806000811461210d576040519150601f19603f3d011682016040523d82523d6000602084013e612112565b606091505b509150915081801561213c57508051158061213c57508080602001905181019061213c91906136a2565b6120635760405162461bcd60e51b81526004016104b090613b0a565b60008083601f84011261216d5761216d600080fd5b5081356001600160401b0381111561218757612187600080fd5b6020830191508360208202830111156121a2576121a2600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b03821117156121e4576121e46121a9565b6040525050565b60006121f660405190565b905061220282826121bf565b919050565b60006001600160401b03821115612220576122206121a9565b5060209081020190565b805b8114610c5b57600080fd5b8035610a048161222a565b60006001600160a01b038216610a04565b61222c81612242565b8035610a0481612253565b60006060828403121561227c5761227c600080fd5b61228660606121eb565b905060006122948484612237565b9082015260206122a684848301612237565b9082015260406122b88484830161225c565b9082015292915050565b60006122d56122d084612207565b6121eb565b838152905060208101606084028301858111156122f4576122f4600080fd5b835b81811015612318576123088782612267565b83526020909201916060016122f6565b5050509392505050565b600082601f83011261233657612336600080fd5b8135611d758482602086016122c2565b60006060828403121561235b5761235b600080fd5b61236560606121eb565b905081356001600160401b0381111561238057612380600080fd5b61238c84828501612322565b825250602061239d8484830161225c565b9082015260406122b884848301612237565b6000806000806000806000806000806000806101008d8f0312156123d5576123d5600080fd5b6001600160401b038d3511156123ed576123ed600080fd5b6123fa8e8e358f01612158565b9b509b506001600160401b0360208e0135111561241957612419600080fd5b6124298e60208f01358f01612158565b995099506001600160401b0360408e0135111561244857612448600080fd5b6124588e60408f01358f01612158565b975097506001600160401b0360608e0135111561247757612477600080fd5b6124878e60608f01358f01612158565b955095506001600160401b0360808e013511156124a6576124a6600080fd5b6124b68e60808f01358f01612346565b93506124c58e60a08f01612237565b92506124d48e60c08f0161225c565b91506124e38e60e08f01612237565b90509295989b509295989b509295989b565b62ffffff81165b82525050565b60208101610a0482846124f5565b62ffffff811661222c565b8035610a0481612510565b60008060006060848603121561253e5761253e600080fd5b600061254a868661225c565b935050602061255b8682870161225c565b925050604061256c8682870161251b565b9150509250925092565b60006040828403121561258b5761258b600080fd5b61259560406121eb565b905060006125a3848461225c565b9082015260206122b884848301612237565b60006125c36122d084612207565b838152905060208101604084028301858111156125e2576125e2600080fd5b835b81811015612318576125f68782612576565b83526020909201916040016125e4565b600082601f83011261261a5761261a600080fd5b8135611d758482602086016125b5565b60006020828403121561263f5761263f600080fd5b81356001600160401b0381111561265857612658600080fd5b611d7584828501612606565b8015156124fc565b6126768282612664565b5060200190565b60200190565b600061268d825190565b808452602093840193830160005b828110156126c05781516126af878261266c565b96505060208201915060010161269b565b5093949350505050565b60208082528101611f628184612683565b600080604083850312156126f1576126f1600080fd5b60006126fd858561225c565b925050602061270e8582860161225c565b9150509250929050565b60208101610a048284612664565b6124fc81612242565b60208101610a048284612726565b60006040828403121561275257612752600080fd5b61275c60406121eb565b9050600061276a8484612237565b9082015260206122b88484830161225c565b600061278a6122d084612207565b838152905060208101604084028301858111156127a9576127a9600080fd5b835b81811015612318576127bd878261273d565b83526020909201916040016127ab565b600082601f8301126127e1576127e1600080fd5b8135611d7584826020860161277c565b6000806040838503121561280757612807600080fd5b82356001600160401b0381111561282057612820600080fd5b6126fd858286016127cd565b806124fc565b60208101610a04828461282c565b612676828261282c565b6000612854825190565b808452602093840193830160005b828110156126c05781516128768782612840565b965050602082019150600101612862565b60208082528101611f62818461284a565b6000602082840312156128ad576128ad600080fd5b6000611d75848461225c565b600080604083850312156128cf576128cf600080fd5b60006128db858561225c565b925050602061270e85828601612237565b60006128fa6122d084612207565b8381529050602081016040840283018581111561291957612919600080fd5b835b818110156123185761292d8782612576565b835260209092019160400161291b565b600082601f83011261295157612951600080fd5b8135611d758482602086016128ec565b60006020828403121561297657612976600080fd5b81356001600160401b0381111561298f5761298f600080fd5b611d758482850161293d565b6000823561015e19368490030181126129b6576129b6600080fd5b90910192915050565b506000610a04602083018361225c565b6000808335601e19368590030181126129ea576129ea600080fd5b83016020810192503590506001600160401b03811115612a0c57612a0c600080fd5b60a0810236038313156121a2576121a2600080fd5b60068110610c5b57600080fd5b8035610a0481612a21565b506000610a046020830183612a2e565b634e487b7160e01b600052602160045260246000fd5b60068110610c5b57610c5b612a49565b8061220281612a5f565b6000610a0482612a6f565b6124fc81612a79565b506000610a046020830183612237565b612aa78180612a39565b612ab18382612a84565b50612abf60208201826129bf565b612acc6020840182612726565b50612ada6040820182612a8d565b612ae7604084018261282c565b50612af56060820182612a8d565b612b02606084018261282c565b50612b106080820182612a8d565b610ca1608084018261282c565b612b278282612a9d565b5060a00190565b8183526020830192506000818060005b85811015612b625781612b518882612b1d565b97505060a082019150600101612b3e565b509495945050505050565b6000808335601e1936859003018112612b8857612b88600080fd5b83016020810192503590506001600160401b03811115612baa57612baa600080fd5b60c0810236038313156121a2576121a2600080fd5b612bc98180612a39565b612bd38382612a84565b50612be160208201826129bf565b612bee6020840182612726565b50612bfc6040820182612a8d565b612c09604084018261282c565b50612c176060820182612a8d565b612c24606084018261282c565b50612c326080820182612a8d565b612c3f608084018261282c565b50612c4d60a08201826129bf565b610ca160a0840182612726565b612c648282612bbf565b5060c00190565b8183526020830192506000818060005b85811015612b625781612c8e8882612c5a565b97505060c082019150600101612c7b565b60058110610c5b57600080fd5b8035610a0481612c9f565b506000610a046020830183612cac565b60058110610c5b57610c5b612a49565b8061220281612cc7565b6000610a0482612cd7565b6124fc81612ce1565b60006101608301612d0683806129bf565b612d108582612726565b50612d1e60208401846129bf565b612d2b6020860182612726565b50612d3960408401846129cf565b8583036040870152612d4c838284612b2e565b92505050612d5d6060840184612b6d565b8583036060870152612d70838284612c6b565b92505050612d816080840184612cb7565b612d8e6080860182612cec565b50612d9c60a0840184612a8d565b612da960a086018261282c565b50612db760c0840184612a8d565b612dc460c086018261282c565b50612dd260e0840184612a8d565b612ddf60e086018261282c565b50612dee610100840184612a8d565b612dfc61010086018261282c565b50612e0b610120840184612a8d565b612e1961012086018261282c565b50612e28610140840184612a8d565b610a0061014086018261282c565b6001600160781b03811661222c565b8035610a0481612e36565b506000610a046020830183612e45565b6001600160781b0381166124fc565b6000808335601e1936859003018112612e8a57612e8a600080fd5b83016020810192503590506001600160401b03811115612eac57612eac600080fd5b368190038313156121a2576121a2600080fd5b82818337506000910152565b818352602083019250612edf828483612ebf565b50601f01601f19160190565b600060a08301612efb838061299b565b8482038552612f0a8282612cf5565b915050612f1a6020840184612e50565b612f276020860182612e60565b50612f356040840184612e50565b612f426040860182612e60565b50612f506060840184612e6f565b8583036060870152612f63838284612ecb565b92505050612f746080840184612e6f565b8583036080870152612f87838284612ecb565b9695505050505050565b6000611f628383612eeb565b60008235609e19368490030181126129b6576129b6600080fd5b818352602083019250600083602084028101838060005b87811015613007578484038952612fe58284612f9d565b612fef8582612f91565b94505060208201602099909901989150600101612fce565b5091979650505050505050565b60028110610c5b57600080fd5b8035610a0481613014565b506000610a046020830183613021565b60028110610c5b57610c5b612a49565b806122028161303c565b6000610a048261304c565b6124fc81613056565b6000808335601e193685900301811261308557613085600080fd5b83016020810192503590506001600160401b038111156130a7576130a7600080fd5b6020810236038313156121a2576121a2600080fd5b81835260208301925060006001600160fb1b038311156130de576130de600080fd5b6020830292506130ef838584612ebf565b50500190565b600060a083016131058380612a8d565b61310f858261282c565b5061311d602084018461302c565b61312a6020860182613061565b506131386040840184612a8d565b613145604086018261282c565b506131536060840184612a8d565b613160606086018261282c565b5061316e608084018461306a565b8583036080870152612f878382846130bc565b6000611f6283836130f5565b818352602083019250600083602084028101838060005b878110156130075784840389526131bb8284612f9d565b6131c58582613181565b945050602082016020999099019891506001016131a4565b6131e78180612a8d565b6131f1838261282c565b506131ff6020820182612a8d565b610ca1602084018261282c565b61321682826131dd565b5060400190565b60400190565b8183526020830192506000818060005b85811015612b625781613246888261320c565b975050604082019150600101613233565b6000611d75848484613223565b6000808335601e193685900301811261327f5761327f600080fd5b83016020810192503590506001600160401b038111156132a1576132a1600080fd5b6040810236038313156121a2576121a2600080fd5b818352602083019250600083602084028101838060005b878110156130075784840389526132e48284613264565b6132ef868284613257565b955050506132fd8260200190565b6020999099019891506001016132cd565b60e08082528101613320818d8f612fb7565b90508181036020830152613335818b8d61318d565b9050818103604083015261334a81898b6132b6565b9050818103606083015261335f8187896132b6565b905061336e608083018661282c565b61337b60a0830185612726565b61338860c083018461282c565b9c9b505050505050505050505050565b80151561222c565b8051610a0481613398565b60006133b96122d084612207565b838152905060208082019084028301858111156133d8576133d8600080fd5b835b81811015612318576133ec87826133a0565b8352602092830192016133da565b600082601f83011261340e5761340e600080fd5b8151611d758482602086016133ab565b8051610a0481612a21565b8051610a0481612253565b8051610a048161222a565b600060a0828403121561345457613454600080fd5b61345e60a06121eb565b9050600061346c848461341e565b90820152602061347e84848301613429565b90820152604061349084848301613434565b9082015260606134a284848301613434565b9082015260806122b884848301613429565b600060e082840312156134c9576134c9600080fd5b6134d360606121eb565b905060006134e1848461343f565b9082015260a06134f384848301613429565b60208301525060c061350784828501613434565b60408301525092915050565b60006135216122d084612207565b83815290506020810160e0840283018581111561354057613540600080fd5b835b818110156123185761355487826134b4565b835260209092019160e001613542565b600082601f83011261357857613578600080fd5b8151611d75848260208601613513565b6000806040838503121561359e5761359e600080fd5b82516001600160401b038111156135b7576135b7600080fd5b6135c3858286016133fa565b92505060208301516001600160401b038111156135e2576135e2600080fd5b61270e85828601613564565b604081016135fc8285612726565b611f626020830184612726565b60006020828403121561361e5761361e600080fd5b6000611d758484613434565b60258152602081017f426174636850757263686173653a20496e73756666696369656e7420616c6c6f81526477616e636560d81b6020820152905061321d565b60208082528101610a048161362a565b606081016136888286612726565b6136956020830185612726565b611d75604083018461282c565b6000602082840312156136b7576136b7600080fd5b6000611d7584846133a0565b604081016136d18285612726565b611f62602083018461282c565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161371c5761371c6136f4565b5060010190565b60008219821115613736576137366136f4565b500190565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b6020820152905061321d565b60208082528101610a048161373b565b6000602082840312156137a1576137a1600080fd5b6000611d758484613429565b60238152602081017f426174636852656769737465723a20496e73756666696369656e742062616c618152626e636560e81b6020820152905061321d565b60208082528101610a04816137ad565b60008282101561380d5761380d6136f4565b500390565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815261267d565b60208082528101610a0481613812565b6001600160a01b0381166124fc565b805161386d8382612726565b5060208101516138806020840182612726565b506040810151613893604084018261282c565b5060608101516138a660608401826124f5565b506080810151610ca16080840182613852565b60a08101610a048284613861565b6001600160a01b03811661222c565b8051610a04816138c7565b63ffffffff811661222c565b8051610a04816138e1565b6000806000806080858703121561391157613911600080fd5b600061391d8787613434565b945050602061392e878288016138d6565b935050604061393f878288016138ed565b925050606061395087828801613434565b91505092959194509250565b6016815260208101750416d6f756e74496e206d757374206265206e6f6e20360541b8152905061267d565b60208082528101610a048161395c565b601481526020810173496e73756666696369656e742062616c616e636560601b8152905061267d565b60208082528101610a0481613997565b80516139dc8382612726565b5060208101516139ef6020840182612726565b506040810151613a0260408401826124f5565b506060810151613a156060840182612726565b506080810151613a28608084018261282c565b5060a0810151613a3b60a084018261282c565b5060c0810151613a4e60c084018261282c565b5060e0810151610ca160e0840182613852565b6101008101610a0482846139d0565b60005b83811015613a8b578181015183820152602001613a73565b83811115613a9a576000848401525b50505050565b6000613aaa825190565b613ab8818560208601613a70565b9290920192915050565b610a048183613aa0565b600281526020810161534160f01b8152905061267d565b60208082528101610a0481613acc565b60028152602081016114d560f21b8152905061267d565b60208082528101610a0481613af356fea2646970667358221220f638da7d4a5df9bc5ecdeaae596826224b17497dc8e288fda311b54ea15953c364736f6c634300080d0033";

type BatchPurchaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchPurchaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchPurchase__factory extends ContractFactory {
  constructor(...args: BatchPurchaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _router: string,
    _quoter: string,
    _weth: string,
    _defaultSwapFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchPurchase> {
    return super.deploy(
      _router,
      _quoter,
      _weth,
      _defaultSwapFee,
      overrides || {}
    ) as Promise<BatchPurchase>;
  }
  getDeployTransaction(
    _router: string,
    _quoter: string,
    _weth: string,
    _defaultSwapFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _quoter,
      _weth,
      _defaultSwapFee,
      overrides || {}
    );
  }
  attach(address: string): BatchPurchase {
    return super.attach(address) as BatchPurchase;
  }
  connect(signer: Signer): BatchPurchase__factory {
    return super.connect(signer) as BatchPurchase__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchPurchaseInterface {
    return new utils.Interface(_abi) as BatchPurchaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchPurchase {
    return new Contract(address, _abi, signerOrProvider) as BatchPurchase;
  }
}
