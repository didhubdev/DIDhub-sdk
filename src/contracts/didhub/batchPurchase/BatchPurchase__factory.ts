/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BatchPurchase, BatchPurchaseInterface } from "./BatchPurchase";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract IQuoterV2",
        name: "_quoter",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "advancedOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "offerFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "considerationFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountInMax",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
            ],
            internalType: "struct Data.SwapPrice[]",
            name: "prices",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
        ],
        internalType: "struct Data.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "fulfillerConduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maximumFulfilled",
        type: "uint256",
      },
    ],
    name: "fulfillAvailableAdvancedOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "advancedOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "offerFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "considerationFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountInMax",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
            ],
            internalType: "struct Data.SwapPrice[]",
            name: "prices",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
        ],
        internalType: "struct Data.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "fulfillerConduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maximumFulfilled",
        type: "uint256",
      },
    ],
    name: "fulfillAvailableAdvancedOrdersERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
        ],
        internalType: "struct Data.DomainPriceInfo[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "getIndividualPrice",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
        ],
        internalType: "struct Data.DomainPriceInfo[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "getTotalPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e0604052731e0049783f008a0085193e00003d00cd54003c716080526cadc04c56bf30ac9d3c0aaf14dc60a081905260c0526000196004553480156200004557600080fd5b5060405162002ef138038062002ef1833981016040819052620000689162000155565b82826200007533620000be565b600180546001600160a01b039384166001600160a01b03199182161790915560028054928416928216929092179091556005805493909216921691909117905550620001ad9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b60006200011b826200010e565b620001398162000121565b81146200014557600080fd5b50565b80516200011b816200012e565b6000806000606084860312156200016f576200016f600080fd5b60006200017d868662000148565b9350506020620001908682870162000148565b9250506040620001a38682870162000148565b9150509250925092565b60805160a05160c051612cfb620001f6600039600081816101ff015261037b015260005050600081816108f1015281816109a201528181610d6c0152610e1d0152612cfb6000f3fe6080604052600436106100895760003560e01c80638da5cb5b116100595780638da5cb5b14610130578063b25326c914610156578063dc1ff86014610183578063f2fde38b146101b0578063f3fef3a3146101d057600080fd5b8062f43ead14610095578063114ee9bb146100aa578063715018a6146100ca5780637e0fc3ca146100df57600080fd5b3661009057005b600080fd5b6100a86100a3366004611834565b6101f0565b005b3480156100b657600080fd5b506100a86100c5366004611834565b6102f0565b3480156100d657600080fd5b506100a86104a6565b3480156100eb57600080fd5b5061011a6100fa36600461197a565b600360209081526000928352604080842090915290825290205460ff1681565b60405161012791906119c1565b60405180910390f35b34801561013c57600080fd5b506000546001600160a01b031660405161012791906119d8565b34801561016257600080fd5b50610176610171366004611a9a565b6104ba565b6040516101279190611adb565b34801561018f57600080fd5b506101a361019e366004611a9a565b6105ac565b6040516101279190611b47565b3480156101bc57600080fd5b506100a86101cb366004611b58565b61070e565b3480156101dc57600080fd5b506100a86101eb366004611b79565b610751565b60006101fb8561080a565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387201b4182602001518f8f8f8f8f8f8f8f8e8e8e6040518d63ffffffff1660e01b81526004016102629b9a9998979695949392919061251f565b60006040518083038185885af1158015610280573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526102a99190810190612799565b50508051156102e1578051604051339180156108fc02916000818181858888f193505050501580156102df573d6000803e3d6000fd5b505b50505050505050505050505050565b83602001516001600160a01b03166323b872dd333087604001516040518463ffffffff1660e01b8152600401610328939291906127ff565b6020604051808303816000875af1158015610347573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036b9190612827565b50600061037785610c7e565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387201b4182602001518f8f8f8f8f8f8f8f8e8e8e6040518d63ffffffff1660e01b81526004016103de9b9a9998979695949392919061251f565b60006040518083038185885af11580156103fc573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526104259190810190612799565b50508051156102e1576020850151815160405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb9161046391339190600401612848565b6020604051808303816000875af1158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df9190612827565b6104ae6110c9565b6104b860006110f3565b565b600080805b84518110156105a25760008582815181106104dc576104dc612863565b60200260200101519050846001600160a01b031681602001516001600160a01b0316146105805760006001600160a01b0386161561051a5785610527565b6005546001600160a01b03165b60208301519091506000906001600160a01b03161561054a578260200151610557565b6005546001600160a01b03165b9050600061056a83838660000151611143565b9050610576818761288f565b955050505061058f565b805161058c908461288f565b92505b508061059a816128a7565b9150506104bf565b5090505b92915050565b6060600083516001600160401b038111156105c9576105c9611626565b6040519080825280602002602001820160405280156105f2578160200160208202803683370190505b50905060005b84518110156105a257600085828151811061061557610615612863565b60200260200101519050846001600160a01b031681602001516001600160a01b0316146106cc5760006001600160a01b038616156106535785610660565b6005546001600160a01b03165b60208301519091506000906001600160a01b031615610683578260200151610690565b6005546001600160a01b03165b905060006106a383838660000151611143565b9050808686815181106106b8576106b8612863565b6020026020010181815250505050506106fb565b80600001518383815181106106e3576106e3612863565b602002602001018181516106f7919061288f565b9052505b5080610706816128a7565b9150506105f8565b6107166110c9565b6001600160a01b0381166107455760405162461bcd60e51b815260040161073c90612901565b60405180910390fd5b61074e816110f3565b50565b6107596110c9565b6001600160a01b03821661079957604051339082156108fc029083906000818181858888f19350505050158015610794573d6000803e3d6000fd5b505050565b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906107c79033908590600401612848565b6020604051808303816000875af11580156107e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107949190612827565b604080518082019091526000808252602082015281513490600080805b8351811015610beb5760006001600160a01b031684828151811061084d5761084d612863565b6020026020010151604001516001600160a01b031614610b825783818151811061087957610879612863565b6020026020010151602001518510156108a45760405162461bcd60e51b815260040161073c9061294f565b8381815181106108b6576108b6612863565b6020026020010151602001518482815181106108d4576108d4612863565b6020026020010151604001516001600160a01b031663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161092d92919061295f565b602060405180830381865afa15801561094a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096e919061297a565b1015610a265783818151811061098657610986612863565b6020026020010151604001516001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006004546040518363ffffffff1660e01b81526004016109e1929190612848565b6020604051808303816000875af1158015610a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a249190612827565b505b60055484516001600160a01b039091169063d0e30db090869084908110610a4f57610a4f612863565b6020026020010151602001516040518263ffffffff1660e01b81526004016000604051808303818588803b158015610a8657600080fd5b505af1158015610a9a573d6000803e3d6000fd5b50505050506000610b1a600560009054906101000a90046001600160a01b0316868481518110610acc57610acc612863565b602002602001015160400151878581518110610aea57610aea612863565b602002602001015160200151888681518110610b0857610b08612863565b60200260200101516000015130611202565b905080858381518110610b2f57610b2f612863565b602002602001015160200151610b45919061299b565b610b4f908461288f565b9250848281518110610b6357610b63612863565b60200260200101516020015186610b7a919061299b565b955050610bd9565b838181518110610b9457610b94612863565b60200260200101516020015185610bab919061299b565b9450838181518110610bbf57610bbf612863565b60200260200101516020015183610bd6919061288f565b92505b80610be3816128a7565b915050610827565b508015610c5557600554604051632e1a7d4d60e01b81526001600160a01b0390911690632e1a7d4d90610c22908490600401611adb565b600060405180830381600087803b158015610c3c57600080fd5b505af1158015610c50573d6000803e3d6000fd5b505050505b60405180604001604052808286610c6c919061288f565b81526020019290925250949350505050565b60408051808201909152600080825260208201526040820151602083015183516000805b82518110156110ad57828181518110610cbd57610cbd612863565b602002602001015160200151851015610ce85760405162461bcd60e51b815260040161073c9061294f565b60006001600160a01b0316838281518110610d0557610d05612863565b6020026020010151604001516001600160a01b031614610ea157828181518110610d3157610d31612863565b602002602001015160200151838281518110610d4f57610d4f612863565b6020026020010151604001516001600160a01b031663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610da892919061295f565b602060405180830381865afa158015610dc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de9919061297a565b1015610ea157828181518110610e0157610e01612863565b6020026020010151604001516001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006004546040518363ffffffff1660e01b8152600401610e5c929190612848565b6020604051808303816000875af1158015610e7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9f9190612827565b505b60006001600160a01b0316838281518110610ebe57610ebe612863565b6020026020010151604001516001600160a01b031603610fe8576005548351600091610f209187916001600160a01b031690879086908110610f0257610f02612863565b602002602001015160200151878681518110610b0857610b08612863565b9050610f2c86826113da565b60055485519197506001600160a01b031690632e1a7d4d90869085908110610f5657610f56612863565b6020026020010151600001516040518263ffffffff1660e01b8152600401610f7e9190611adb565b600060405180830381600087803b158015610f9857600080fd5b505af1158015610fac573d6000803e3d6000fd5b50505050610fe0848381518110610fc557610fc5612863565b602002602001015160000151846113e690919063ffffffff16565b92505061109b565b836001600160a01b031683828151811061100457611004612863565b6020026020010151604001516001600160a01b0316036110555761104e83828151811061103357611033612863565b602002602001015160000151866113da90919063ffffffff16565b945061109b565b600061108b8585848151811061106d5761106d612863565b602002602001015160400151868581518110610f0257610f02612863565b905061109786826113da565b9550505b806110a5816128a7565b915050610ca2565b5060408051808201909152938452602084015250909392505050565b6000546001600160a01b031633146104b85760405162461bcd60e51b815260040161073c906129e2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002546040805160a0810182526001600160a01b03868116825285811660208301528183018590526101f4606083018190526000608084018190529351635e90b82560e11b815293949093859384938493849391169163bd21704a916111ac9190600401612a64565b6080604051808303816000875af11580156111cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ef9190612aa3565b50919750505050505050505b9392505050565b60008084116112235760405162461bcd60e51b815260040161073c90612b32565b6040516370a0823160e01b815284906001600160a01b038816906370a08231906112519030906004016119d8565b602060405180830381865afa15801561126e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611292919061297a565b10156112b05760405162461bcd60e51b815260040161073c90612b6b565b6001546112c89087906001600160a01b0316866113f2565b60006112d542600f61288f565b60408051610100810182526001600160a01b03808b16825289811660208301526101f482840181905287821660608401526080830185905260a0830189905260c083018a9052600060e084018190526001549451631b67c43360e31b8152959650909490938492169063db3e219890611352908590600401612c0c565b6020604051808303816000875af1158015611371573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611395919061297a565b9050888110156113cc576001546113b8908c906001600160a01b031660006113f2565b6113cc8b306113c7848d61299b565b6114e7565b9a9950505050505050505050565b60006111fb828461299b565b60006111fb828461288f565b600080846001600160a01b031663095ea7b360e01b858560405160240161141a929190612848565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516114589190612c6d565b6000604051808303816000865af19150503d8060008114611495576040519150601f19603f3d011682016040523d82523d6000602084013e61149a565b606091505b50915091508180156114c45750805115806114c45750808060200190518101906114c49190612827565b6114e05760405162461bcd60e51b815260040161073c90612c8e565b5050505050565b600080846001600160a01b031663a9059cbb60e01b858560405160240161150f929190612848565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161154d9190612c6d565b6000604051808303816000865af19150503d806000811461158a576040519150601f19603f3d011682016040523d82523d6000602084013e61158f565b606091505b50915091508180156115b95750805115806115b95750808060200190518101906115b99190612827565b6114e05760405162461bcd60e51b815260040161073c90612cb5565b60008083601f8401126115ea576115ea600080fd5b5081356001600160401b0381111561160457611604600080fd5b60208301915083602082028301111561161f5761161f600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b038211171561166157611661611626565b6040525050565b600061167360405190565b905061167f828261163c565b919050565b60006001600160401b0382111561169d5761169d611626565b5060209081020190565b805b811461074e57600080fd5b80356105a6816116a7565b60006001600160a01b0382166105a6565b6116a9816116bf565b80356105a6816116d0565b6000606082840312156116f9576116f9600080fd5b6117036060611668565b9050600061171184846116b4565b908201526020611723848483016116b4565b908201526040611735848483016116d9565b9082015292915050565b600061175261174d84611684565b611668565b8381529050602081016060840283018581111561177157611771600080fd5b835b818110156117955761178587826116e4565b8352602090920191606001611773565b5050509392505050565b600082601f8301126117b3576117b3600080fd5b81356117c384826020860161173f565b949350505050565b6000606082840312156117e0576117e0600080fd5b6117ea6060611668565b905081356001600160401b0381111561180557611805600080fd5b6118118482850161179f565b8252506020611822848483016116d9565b908201526040611735848483016116b4565b6000806000806000806000806000806000806101008d8f03121561185a5761185a600080fd5b6001600160401b038d35111561187257611872600080fd5b61187f8e8e358f016115d5565b9b509b506001600160401b0360208e0135111561189e5761189e600080fd5b6118ae8e60208f01358f016115d5565b995099506001600160401b0360408e013511156118cd576118cd600080fd5b6118dd8e60408f01358f016115d5565b975097506001600160401b0360608e013511156118fc576118fc600080fd5b61190c8e60608f01358f016115d5565b955095506001600160401b0360808e0135111561192b5761192b600080fd5b61193b8e60808f01358f016117cb565b935061194a8e60a08f016116b4565b92506119598e60c08f016116d9565b91506119688e60e08f016116b4565b90509295989b509295989b509295989b565b6000806040838503121561199057611990600080fd5b600061199c85856116d9565b92505060206119ad858286016116d9565b9150509250929050565b8015155b82525050565b602081016105a682846119b7565b6119bb816116bf565b602081016105a682846119cf565b6000604082840312156119fb576119fb600080fd5b611a056040611668565b90506000611a1384846116b4565b908201526020611735848483016116d9565b6000611a3361174d84611684565b83815290506020810160408402830185811115611a5257611a52600080fd5b835b8181101561179557611a6687826119e6565b8352602090920191604001611a54565b600082601f830112611a8a57611a8a600080fd5b81356117c3848260208601611a25565b60008060408385031215611ab057611ab0600080fd5b82356001600160401b03811115611ac957611ac9600080fd5b61199c85828601611a76565b806119bb565b602081016105a68284611ad5565b611af38282611ad5565b5060200190565b60200190565b6000611b0a825190565b808452602093840193830160005b82811015611b3d578151611b2c8782611ae9565b965050602082019150600101611b18565b5093949350505050565b602080825281016111fb8184611b00565b600060208284031215611b6d57611b6d600080fd5b60006117c384846116d9565b60008060408385031215611b8f57611b8f600080fd5b6000611b9b85856116d9565b92505060206119ad858286016116b4565b6000823561015e1936849003018112611bc757611bc7600080fd5b90910192915050565b5060006105a660208301836116d9565b6000808335601e1936859003018112611bfb57611bfb600080fd5b83016020810192503590506001600160401b03811115611c1d57611c1d600080fd5b60a08102360383131561161f5761161f600080fd5b6006811061074e57600080fd5b80356105a681611c32565b5060006105a66020830183611c3f565b634e487b7160e01b600052602160045260246000fd5b6006811061074e5761074e611c5a565b8061167f81611c70565b60006105a682611c80565b6119bb81611c8a565b5060006105a660208301836116b4565b611cb88180611c4a565b611cc28382611c95565b50611cd06020820182611bd0565b611cdd60208401826119cf565b50611ceb6040820182611c9e565b611cf86040840182611ad5565b50611d066060820182611c9e565b611d136060840182611ad5565b50611d216080820182611c9e565b6107946080840182611ad5565b611d388282611cae565b5060a00190565b8183526020830192506000818060005b85811015611d735781611d628882611d2e565b97505060a082019150600101611d4f565b509495945050505050565b6000808335601e1936859003018112611d9957611d99600080fd5b83016020810192503590506001600160401b03811115611dbb57611dbb600080fd5b60c08102360383131561161f5761161f600080fd5b611dda8180611c4a565b611de48382611c95565b50611df26020820182611bd0565b611dff60208401826119cf565b50611e0d6040820182611c9e565b611e1a6040840182611ad5565b50611e286060820182611c9e565b611e356060840182611ad5565b50611e436080820182611c9e565b611e506080840182611ad5565b50611e5e60a0820182611bd0565b61079460a08401826119cf565b611e758282611dd0565b5060c00190565b8183526020830192506000818060005b85811015611d735781611e9f8882611e6b565b97505060c082019150600101611e8c565b6005811061074e57600080fd5b80356105a681611eb0565b5060006105a66020830183611ebd565b6005811061074e5761074e611c5a565b8061167f81611ed8565b60006105a682611ee8565b6119bb81611ef2565b60006101608301611f178380611bd0565b611f2185826119cf565b50611f2f6020840184611bd0565b611f3c60208601826119cf565b50611f4a6040840184611be0565b8583036040870152611f5d838284611d3f565b92505050611f6e6060840184611d7e565b8583036060870152611f81838284611e7c565b92505050611f926080840184611ec8565b611f9f6080860182611efd565b50611fad60a0840184611c9e565b611fba60a0860182611ad5565b50611fc860c0840184611c9e565b611fd560c0860182611ad5565b50611fe360e0840184611c9e565b611ff060e0860182611ad5565b50611fff610100840184611c9e565b61200d610100860182611ad5565b5061201c610120840184611c9e565b61202a610120860182611ad5565b50612039610140840184611c9e565b6105a2610140860182611ad5565b6001600160781b0381166116a9565b80356105a681612047565b5060006105a66020830183612056565b6001600160781b0381166119bb565b6000808335601e193685900301811261209b5761209b600080fd5b83016020810192503590506001600160401b038111156120bd576120bd600080fd5b3681900383131561161f5761161f600080fd5b82818337506000910152565b8183526020830192506120f08284836120d0565b50601f01601f19160190565b600060a0830161210c8380611bac565b848203855261211b8282611f06565b91505061212b6020840184612061565b6121386020860182612071565b506121466040840184612061565b6121536040860182612071565b506121616060840184612080565b85830360608701526121748382846120dc565b925050506121856080840184612080565b85830360808701526121988382846120dc565b9695505050505050565b60006111fb83836120fc565b60008235609e1936849003018112611bc757611bc7600080fd5b818352602083019250600083602084028101838060005b878110156122185784840389526121f682846121ae565b61220085826121a2565b945050602082016020999099019891506001016121df565b5091979650505050505050565b6002811061074e57600080fd5b80356105a681612225565b5060006105a66020830183612232565b6002811061074e5761074e611c5a565b8061167f8161224d565b60006105a68261225d565b6119bb81612267565b6000808335601e193685900301811261229657612296600080fd5b83016020810192503590506001600160401b038111156122b8576122b8600080fd5b60208102360383131561161f5761161f600080fd5b81835260208301925060006001600160fb1b038311156122ef576122ef600080fd5b6020830292506123008385846120d0565b50500190565b600060a083016123168380611c9e565b6123208582611ad5565b5061232e602084018461223d565b61233b6020860182612272565b506123496040840184611c9e565b6123566040860182611ad5565b506123646060840184611c9e565b6123716060860182611ad5565b5061237f608084018461227b565b85830360808701526121988382846122cd565b60006111fb8383612306565b818352602083019250600083602084028101838060005b878110156122185784840389526123cc82846121ae565b6123d68582612392565b945050602082016020999099019891506001016123b5565b6123f88180611c9e565b6124028382611ad5565b506124106020820182611c9e565b6107946020840182611ad5565b61242782826123ee565b5060400190565b60400190565b8183526020830192506000818060005b85811015611d735781612457888261241d565b975050604082019150600101612444565b60006117c3848484612434565b6000808335601e193685900301811261249057612490600080fd5b83016020810192503590506001600160401b038111156124b2576124b2600080fd5b60408102360383131561161f5761161f600080fd5b818352602083019250600083602084028101838060005b878110156122185784840389526124f58284612475565b612500868284612468565b9550505061250e8260200190565b6020999099019891506001016124de565b60e08082528101612531818d8f6121c8565b90508181036020830152612546818b8d61239e565b9050818103604083015261255b81898b6124c7565b905081810360608301526125708187896124c7565b905061257f6080830186611ad5565b61258c60a08301856119cf565b61259960c0830184611ad5565b9c9b505050505050505050505050565b8015156116a9565b80516105a6816125a9565b60006125ca61174d84611684565b838152905060208082019084028301858111156125e9576125e9600080fd5b835b81811015611795576125fd87826125b1565b8352602092830192016125eb565b600082601f83011261261f5761261f600080fd5b81516117c38482602086016125bc565b80516105a681611c32565b80516105a6816116d0565b80516105a6816116a7565b600060a0828403121561266557612665600080fd5b61266f60a0611668565b9050600061267d848461262f565b90820152602061268f8484830161263a565b9082015260406126a184848301612645565b9082015260606126b384848301612645565b9082015260806117358484830161263a565b600060e082840312156126da576126da600080fd5b6126e46060611668565b905060006126f28484612650565b9082015260a06127048484830161263a565b60208301525060c061271884828501612645565b60408301525092915050565b600061273261174d84611684565b83815290506020810160e0840283018581111561275157612751600080fd5b835b818110156117955761276587826126c5565b835260209092019160e001612753565b600082601f83011261278957612789600080fd5b81516117c3848260208601612724565b600080604083850312156127af576127af600080fd5b82516001600160401b038111156127c8576127c8600080fd5b6127d48582860161260b565b92505060208301516001600160401b038111156127f3576127f3600080fd5b6119ad85828601612775565b6060810161280d82866119cf565b61281a60208301856119cf565b6117c36040830184611ad5565b60006020828403121561283c5761283c600080fd5b60006117c384846125b1565b6040810161285682856119cf565b6111fb6020830184611ad5565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156128a2576128a2612879565b500190565b6000600182016128b9576128b9612879565b5060010190565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b6020820152905061242e565b602080825281016105a6816128c0565b60238152602081017f426174636852656769737465723a20496e73756666696369656e742062616c618152626e636560e81b6020820152905061242e565b602080825281016105a681612911565b6040810161296d82856119cf565b6111fb60208301846119cf565b60006020828403121561298f5761298f600080fd5b60006117c38484612645565b6000828210156129ad576129ad612879565b500390565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152611afa565b602080825281016105a6816129b2565b62ffffff81166119bb565b6001600160a01b0381166119bb565b8051612a1883826119cf565b506020810151612a2b60208401826119cf565b506040810151612a3e6040840182611ad5565b506060810151612a5160608401826129f2565b50608081015161079460808401826129fd565b60a081016105a68284612a0c565b6001600160a01b0381166116a9565b80516105a681612a72565b63ffffffff81166116a9565b80516105a681612a8c565b60008060008060808587031215612abc57612abc600080fd5b6000612ac88787612645565b9450506020612ad987828801612a81565b9350506040612aea87828801612a98565b9250506060612afb87828801612645565b91505092959194509250565b6016815260208101750416d6f756e74496e206d757374206265206e6f6e20360541b81529050611afa565b602080825281016105a681612b07565b601481526020810173496e73756666696369656e742062616c616e636560601b81529050611afa565b602080825281016105a681612b42565b8051612b8783826119cf565b506020810151612b9a60208401826119cf565b506040810151612bad60408401826129f2565b506060810151612bc060608401826119cf565b506080810151612bd36080840182611ad5565b5060a0810151612be660a0840182611ad5565b5060c0810151612bf960c0840182611ad5565b5060e081015161079460e08401826129fd565b61010081016105a68284612b7b565b60005b83811015612c36578181015183820152602001612c1e565b83811115612c45576000848401525b50505050565b6000612c55825190565b612c63818560208601612c1b565b9290920192915050565b6105a68183612c4b565b600281526020810161534160f01b81529050611afa565b602080825281016105a681612c77565b60028152602081016114d560f21b81529050611afa565b602080825281016105a681612c9e56fea26469706673582212204910bc75a7cfe09e45dcbbf723e961caeaa62ae998d41373d860009528153c2364736f6c634300080d0033";

type BatchPurchaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchPurchaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchPurchase__factory extends ContractFactory {
  constructor(...args: BatchPurchaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _router: string,
    _quoter: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchPurchase> {
    return super.deploy(
      _router,
      _quoter,
      _weth,
      overrides || {}
    ) as Promise<BatchPurchase>;
  }
  getDeployTransaction(
    _router: string,
    _quoter: string,
    _weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_router, _quoter, _weth, overrides || {});
  }
  attach(address: string): BatchPurchase {
    return super.attach(address) as BatchPurchase;
  }
  connect(signer: Signer): BatchPurchase__factory {
    return super.connect(signer) as BatchPurchase__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchPurchaseInterface {
    return new utils.Interface(_abi) as BatchPurchaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchPurchase {
    return new Contract(address, _abi, signerOrProvider) as BatchPurchase;
  }
}
