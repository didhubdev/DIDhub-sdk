/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BatchPurchase,
  BatchPurchaseInterface,
} from "./BatchPurchase";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract IQuoterV2",
        name: "_quoter",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_defaultSwapFee",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IFT[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "batchCheckApprovalERC20",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct INFT[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "batchCheckApprovalERC721orERC1155",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultSwapFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "advancedOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "offerFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "considerationFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountInMax",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
            ],
            internalType: "struct Data.SwapPrice[]",
            name: "prices",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
        ],
        internalType: "struct Data.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "fulfillerConduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maximumFulfilled",
        type: "uint256",
      },
    ],
    name: "fulfillAvailableAdvancedListingOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "advancedOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "offerFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "considerationFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountInMax",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
            ],
            internalType: "struct Data.SwapPrice[]",
            name: "prices",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
        ],
        internalType: "struct Data.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "fulfillerConduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maximumFulfilled",
        type: "uint256",
      },
    ],
    name: "fulfillAvailableAdvancedListingOrdersERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "advancedOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "offerFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "considerationFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
              },
            ],
            internalType: "struct INFT[]",
            name: "nftFullfillments",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct IFT[]",
            name: "ftFullfillments",
            type: "tuple[]",
          },
        ],
        internalType: "struct IOrderFulfillments",
        name: "orderFulfillments",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "fulfillerConduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maximumFulfilled",
        type: "uint256",
      },
    ],
    name: "fulfillAvailableAdvancedOfferOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
        ],
        internalType: "struct Data.DomainPriceInfo[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "getIndividualPrice",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
        ],
        internalType: "struct Data.DomainPriceInfo[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "getTotalPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "swapFee",
        type: "uint24",
      },
    ],
    name: "setSpecificSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "specificSwapFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e0604052731e0049783f008a0085193e00003d00cd54003c716080526cadc04c56bf30ac9d3c0aaf14dc60a081905260c0526000196004553480156200004557600080fd5b506040516200464d3803806200464d83398101604081905262000068916200018a565b83836200007533620000da565b600180546001600160a01b03199081166001600160a01b039485161790915560028054909116918316919091179055600680546001600160b81b0319166301000000949092169390930262ffffff19161762ffffff9190911617905550620001f89050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b600062000137826200012a565b62000155816200013d565b81146200016157600080fd5b50565b805162000137816200014a565b62ffffff811662000155565b8051620001378162000171565b60008060008060808587031215620001a557620001a5600080fd5b6000620001b3878762000164565b9450506020620001c68782880162000164565b9350506040620001d98782880162000164565b9250506060620001ec878288016200017d565b91505092959194509250565b60805160a05160c0516143e9620002646000396000818161074601528181610d8b015261106101526000505060008181610449015281816104fa015281816105e3015281816106980152818161171f015281816117d001528181611e8f0152611f4001526143e96000f3fe6080604052600436106100ec5760003560e01c8063827130841161008a578063b25326c911610059578063b25326c9146102ac578063dc1ff860146102d9578063f2fde38b14610306578063f3fef3a31461032657600080fd5b8063827130841461021657806384954f9a146102535780638da5cb5b14610273578063aafb28571461029957600080fd5b80635ed74f98116100c65780635ed74f9814610179578063715018a61461019957806375e02b98146101ae5780637e0fc3ca146101ce57600080fd5b806303df7396146100f85780633c90604a1461012a5780633ed5c2721461014c57600080fd5b366100f357005b600080fd5b34801561010457600080fd5b506006546101149062ffffff1681565b60405161012191906127a7565b60405180910390f35b34801561013657600080fd5b5061014a610145366004612a87565b610346565b005b34801561015857600080fd5b5061016c610167366004612bcd565b610a84565b6040516101219190612c6d565b34801561018557600080fd5b5061014a610194366004612dad565b610c61565b3480156101a557600080fd5b5061014a610ec1565b3480156101ba57600080fd5b5061014a6101c9366004612eca565b610ed5565b3480156101da57600080fd5b506102096101e9366004612f1a565b600360209081526000928352604080842090915290825290205460ff1681565b6040516101219190612f57565b34801561022257600080fd5b50610114610231366004612f1a565b600560209081526000928352604080842090915290825290205462ffffff1681565b34801561025f57600080fd5b5061016c61026e366004612f65565b610f1d565b34801561027f57600080fd5b506000546001600160a01b03166040516101219190612fa8565b61014a6102a7366004612dad565b611052565b3480156102b857600080fd5b506102cc6102c736600461306a565b611141565b60405161012191906130ab565b3480156102e557600080fd5b506102f96102f436600461306a565b611324565b6040516101219190613100565b34801561031257600080fd5b5061014a610321366004613111565b61153e565b34801561033257600080fd5b5061014a610341366004613132565b611578565b60005b84515181101561057d57845180518290811061036757610367613165565b6020026020010151600001516001600160a01b03166323b872dd33308860000151858151811061039957610399613165565b6020026020010151602001516040518463ffffffff1660e01b81526004016103c39392919061317b565b600060405180830381600087803b1580156103dd57600080fd5b505af11580156103f1573d6000803e3d6000fd5b505050508460000151818151811061040b5761040b613165565b6020026020010151600001516001600160a01b031663e985e9c58660000151838151811061043b5761043b613165565b6020026020010151600001517f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016104859291906131a3565b602060405180830381865afa1580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c691906131d1565b61056b5784518051829081106104de576104de613165565b6020026020010151600001516001600160a01b031663a22cb4657f000000000000000000000000000000000000000000000000000000000000000060016040518363ffffffff1660e01b81526004016105389291906131f2565b600060405180830381600087803b15801561055257600080fd5b505af1158015610566573d6000803e3d6000fd5b505050505b8061057581613223565b915050610349565b5060005b84602001515181101561072e57846020015181815181106105a4576105a4613165565b602002602001015160200151856020015182815181106105c6576105c6613165565b6020026020010151600001516001600160a01b031663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161061f9291906131a3565b602060405180830381865afa15801561063c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106609190613247565b101561071c578460200151818151811061067c5761067c613165565b6020026020010151600001516001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006004546040518363ffffffff1660e01b81526004016106d7929190613268565b6020604051808303816000875af11580156106f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071a91906131d1565b505b8061072681613223565b915050610581565b506040516387201b4160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906387201b419061078f908f908f908f908f908f908f908f908f908e9030908e90600401613bf6565b6000604051808303816000875af11580156107ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d69190810190613e52565b505060005b8b811015610a755760005b8d8d838181106107f8576107f8613165565b905060200281019061080a9190613eb8565b6108149080613edc565b610822906040810190613ef7565b9050811015610a625760018e8e8481811061083f5761083f613165565b90506020028101906108519190613eb8565b61085b9080613edc565b610869906040810190613ef7565b8381811061087957610879613165565b61088f92602060a0909202019081019150613f4b565b60058111156108a0576108a0613331565b03610a505760008e8e848181106108b9576108b9613165565b90506020028101906108cb9190613eb8565b6108d59080613edc565b6108e3906040810190613ef7565b838181106108f3576108f3613165565b905060a00201602001602081019061090b9190613111565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016109369190612fa8565b602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190613247565b90508e8e8481811061098b5761098b613165565b905060200281019061099d9190613eb8565b6109a79080613edc565b6109b5906040810190613ef7565b838181106109c5576109c5613165565b905060a0020160200160208101906109dd9190613111565b6001600160a01b031663a9059cbb86836040518363ffffffff1660e01b8152600401610a0a929190613268565b6020604051808303816000875af1158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d91906131d1565b50505b80610a5a81613223565b9150506107e6565b5080610a6d81613223565b9150506107db565b50505050505050505050505050565b6060600082516001600160401b03811115610aa157610aa1612806565b604051908082528060200260200182016040528015610aca578160200160208202803683370190505b50905060005b8351811015610c5a57306001600160a01b0316848281518110610af557610af5613165565b6020026020010151600001516001600160a01b031663081812fc868481518110610b2157610b21613165565b6020026020010151602001516040518263ffffffff1660e01b8152600401610b4991906130ab565b602060405180830381865afa158015610b66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8a9190613f6c565b6001600160a01b03161480610c265750838181518110610bac57610bac613165565b6020026020010151600001516001600160a01b031663e985e9c533306040518363ffffffff1660e01b8152600401610be59291906131a3565b602060405180830381865afa158015610c02573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2691906131d1565b828281518110610c3857610c38613165565b9115156020928302919091019091015280610c5281613223565b915050610ad0565b5092915050565b836040015184602001516001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b8152600401610c989291906131a3565b602060405180830381865afa158015610cb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd99190613247565b1115610d005760405162461bcd60e51b8152600401610cf790613fcd565b60405180910390fd5b83602001516001600160a01b03166323b872dd333087604001516040518463ffffffff1660e01b8152600401610d389392919061317b565b6020604051808303816000875af1158015610d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7b91906131d1565b506000610d8785611631565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387201b418e8e8e8e8e8e8e8e8d8d8d6040518c63ffffffff1660e01b8152600401610de99b9a99989796959493929190613bf6565b6000604051808303816000875af1158015610e08573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e309190810190613e52565b5050805115610a75576020850151815160405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb91610e6e91339190600401613268565b6020604051808303816000875af1158015610e8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb191906131d1565b5050505050505050505050505050565b610ec9611c2d565b610ed36000611c57565b565b610edd611c2d565b6001600160a01b03928316600090815260056020908152604080832094909516825292909252919020805462ffffff191662ffffff909216919091179055565b6060600082516001600160401b03811115610f3a57610f3a612806565b604051908082528060200260200182016040528015610f63578160200160208202803683370190505b50905060005b8351811015610c5a57838181518110610f8457610f84613165565b602002602001015160200151848281518110610fa257610fa2613165565b6020026020010151600001516001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b8152600401610fdb9291906131a3565b602060405180830381865afa158015610ff8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101c9190613247565b101582828151811061103057611030613165565b911515602092830291909101909101528061104a81613223565b915050610f69565b600061105d85611ca7565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387201b4182602001518f8f8f8f8f8f8f8f8e8e8e6040518d63ffffffff1660e01b81526004016110c49b9a99989796959493929190613bf6565b60006040518083038185885af11580156110e2573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261110b9190810190613e52565b5050805115610a75578051604051339180156108fc02916000818181858888f19350505050158015610eb1573d6000803e3d6000fd5b600080805b845181101561131a57600085828151811061116357611163613165565b60200260200101519050846001600160a01b031681602001516001600160a01b0316141580156111bf575060208101516001600160a01b03161580156111bd57506006546001600160a01b03868116630100000090920416145b155b80156111f8575060065460208201516001600160a01b039081166301000000909204161480156111f657506001600160a01b038516155b155b156112f85760006001600160a01b038616156112145785611228565b600654630100000090046001600160a01b03165b60208301519091506000906001600160a01b03161561124b57826020015161125f565b600654630100000090046001600160a01b03165b6001600160a01b0380841660009081526005602090815260408083209385168352929052908120549192509062ffffff166112a15760065462ffffff166112cd565b6001600160a01b0380841660009081526005602090815260408083209386168352929052205462ffffff165b905060006112e18484876000015185612303565b90506112ed8188613fdd565b965050505050611307565b80516113049084613fdd565b92505b508061131281613223565b915050611146565b5090505b92915050565b6060600083516001600160401b0381111561134157611341612806565b60405190808252806020026020018201604052801561136a578160200160208202803683370190505b50905060005b845181101561131a57600085828151811061138d5761138d613165565b60200260200101519050846001600160a01b031681602001516001600160a01b0316141580156113e9575060208101516001600160a01b03161580156113e757506006546001600160a01b03868116630100000090920416145b155b156114fc5760006001600160a01b038616156114055785611419565b600654630100000090046001600160a01b03165b60208301519091506000906001600160a01b03161561143c578260200151611450565b600654630100000090046001600160a01b03165b6001600160a01b0380841660009081526005602090815260408083209385168352929052908120549192509062ffffff166114925760065462ffffff166114be565b6001600160a01b0380841660009081526005602090815260408083209386168352929052205462ffffff165b905060006114d28484876000015185612303565b9050808787815181106114e7576114e7613165565b6020026020010181815250505050505061152b565b806000015183838151811061151357611513613165565b602002602001018181516115279190613fdd565b9052505b508061153681613223565b915050611370565b611546611c2d565b6001600160a01b03811661156c5760405162461bcd60e51b8152600401610cf790614036565b61157581611c57565b50565b611580611c2d565b6001600160a01b0382166115c057604051339082156108fc029083906000818181858888f193505050501580156115bb573d6000803e3d6000fd5b505050565b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906115ee9033908590600401613268565b6020604051808303816000875af115801561160d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bb91906131d1565b60408051808201909152600080825260208201526040820151602083015183516000805b8251811015611c115782818151811061167057611670613165565b60200260200101516020015185101561169b5760405162461bcd60e51b8152600401610cf790614084565b60006001600160a01b03168382815181106116b8576116b8613165565b6020026020010151604001516001600160a01b031614611854578281815181106116e4576116e4613165565b60200260200101516020015183828151811061170257611702613165565b6020026020010151604001516001600160a01b031663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b815260040161175b9291906131a3565b602060405180830381865afa158015611778573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179c9190613247565b1015611854578281815181106117b4576117b4613165565b6020026020010151604001516001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006004546040518363ffffffff1660e01b815260040161180f929190613268565b6020604051808303816000875af115801561182e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061185291906131d1565b505b60006001600160a01b031683828151811061187157611871613165565b6020026020010151604001516001600160a01b031603611a95576006546001600160a01b038581166301000000909204161461199b576001600160a01b0380851660009081526005602090815260408083206006546301000000900490941683529290529081205462ffffff166118ef5760065462ffffff16611925565b6001600160a01b038086166000908152600560209081526040808320600654630100000090049094168352929052205462ffffff165b9050600061198686600660039054906101000a90046001600160a01b031687868151811061195557611955613165565b60200260200101516020015188878151811061197357611973613165565b60200260200101516000015130876123bf565b90506119928782612598565b965050506119ce565b6119cb8382815181106119b0576119b0613165565b6020026020010151600001518661259890919063ffffffff16565b94505b600660039054906101000a90046001600160a01b03166001600160a01b0316632e1a7d4d848381518110611a0457611a04613165565b6020026020010151600001516040518263ffffffff1660e01b8152600401611a2c91906130ab565b600060405180830381600087803b158015611a4657600080fd5b505af1158015611a5a573d6000803e3d6000fd5b50505050611a8e838281518110611a7357611a73613165565b602002602001015160000151836125ab90919063ffffffff16565b9150611bff565b836001600160a01b0316838281518110611ab157611ab1613165565b6020026020010151604001516001600160a01b031603611ae757611ae08382815181106119b0576119b0613165565b9450611bff565b6001600160a01b038416600090815260056020526040812084518291908290879086908110611b1857611b18613165565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff1611611b585760065462ffffff16611bb6565b6001600160a01b03851660009081526005602052604081208551909190869085908110611b8757611b87613165565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff165b90506000611bee86868581518110611bd057611bd0613165565b60200260200101516040015187868151811061195557611955613165565b9050611bfa8782612598565b965050505b80611c0981613223565b915050611655565b5060408051808201909152938452602084015250909392505050565b6000546001600160a01b03163314610ed35760405162461bcd60e51b8152600401610cf7906140c4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080518082019091526000808252602082015281513490600080805b835181101561226a57838181518110611cdf57611cdf613165565b602002602001015160200151851015611d0a5760405162461bcd60e51b8152600401610cf790614084565b600660039054906101000a90046001600160a01b03166001600160a01b0316848281518110611d3b57611d3b613165565b6020026020010151604001516001600160a01b031603611e0b57600660039054906101000a90046001600160a01b03166001600160a01b031663d0e30db0858381518110611d8b57611d8b613165565b6020026020010151600001516040518263ffffffff1660e01b81526004016000604051808303818588803b158015611dc257600080fd5b505af1158015611dd6573d6000803e3d6000fd5b5050505050838181518110611ded57611ded613165565b60200260200101516000015185611e0491906140d4565b9450612258565b60006001600160a01b0316848281518110611e2857611e28613165565b6020026020010151604001516001600160a01b03161461220157838181518110611e5457611e54613165565b602002602001015160200151848281518110611e7257611e72613165565b6020026020010151604001516001600160a01b031663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401611ecb9291906131a3565b602060405180830381865afa158015611ee8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f0c9190613247565b1015611fc457838181518110611f2457611f24613165565b6020026020010151604001516001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006004546040518363ffffffff1660e01b8152600401611f7f929190613268565b6020604051808303816000875af1158015611f9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc291906131d1565b505b600660039054906101000a90046001600160a01b03166001600160a01b031663d0e30db0858381518110611ffa57611ffa613165565b6020026020010151602001516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561203157600080fd5b505af1158015612045573d6000803e3d6000fd5b5050600654630100000090046001600160a01b0316600090815260056020526040812088519194508493509150829088908690811061208657612086613165565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff16116120c65760065462ffffff1661212d565b600654630100000090046001600160a01b0316600090815260056020526040812086519091908790859081106120fe576120fe613165565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff165b90506000612198600660039054906101000a90046001600160a01b031687858151811061215c5761215c613165565b60200260200101516040015188868151811061217a5761217a613165565b60200260200101516020015189878151811061197357611973613165565b9050808684815181106121ad576121ad613165565b6020026020010151602001516121c391906140d4565b6121cd9085613fdd565b93508583815181106121e1576121e1613165565b602002602001015160200151876121f891906140d4565b96505050612258565b83818151811061221357612213613165565b6020026020010151600001518561222a91906140d4565b945083818151811061223e5761223e613165565b602002602001015160000151836122559190613fdd565b92505b8061226281613223565b915050611cc4565b5080156122da57600654604051632e1a7d4d60e01b815263010000009091046001600160a01b031690632e1a7d4d906122a79084906004016130ab565b600060405180830381600087803b1580156122c157600080fd5b505af11580156122d5573d6000803e3d6000fd5b505050505b604051806040016040528082866122f19190613fdd565b81526020019290925250949350505050565b6002546040805160a0810182526001600160a01b038781168252868116602083015281830186905262ffffff851660608301526000608083018190529251635e90b82560e11b815292938493849384938493169163bd21704a9161236991600401614152565b6080604051808303816000875af1158015612388573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123ac9190614191565b509196505050505050505b949350505050565b60008085116123e05760405162461bcd60e51b8152600401610cf790614220565b6040516370a0823160e01b815285906001600160a01b038916906370a082319061240e903090600401612fa8565b602060405180830381865afa15801561242b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244f9190613247565b101561246d5760405162461bcd60e51b8152600401610cf790614259565b6001546124859088906001600160a01b0316876125b7565b600061249242600f613fdd565b60408051610100810182526001600160a01b03808c1682528a8116602083015262ffffff87168284015287811660608301526080820184905260a0820189905260c082018a9052600060e083018190526001549351631b67c43360e31b8152949550939192849291169063db3e2198906125109085906004016142fa565b6020604051808303816000875af115801561252f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125539190613247565b90508881101561258a57600154612576908c906001600160a01b031660006125b7565b61258a8b30612585848d6140d4565b6126ac565b9a9950505050505050505050565b60006125a482846140d4565b9392505050565b60006125a48284613fdd565b600080846001600160a01b031663095ea7b360e01b85856040516024016125df929190613268565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161261d919061435b565b6000604051808303816000865af19150503d806000811461265a576040519150601f19603f3d011682016040523d82523d6000602084013e61265f565b606091505b509150915081801561268957508051158061268957508080602001905181019061268991906131d1565b6126a55760405162461bcd60e51b8152600401610cf79061437c565b5050505050565b600080846001600160a01b031663a9059cbb60e01b85856040516024016126d4929190613268565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051612712919061435b565b6000604051808303816000865af19150503d806000811461274f576040519150601f19603f3d011682016040523d82523d6000602084013e612754565b606091505b509150915081801561277e57508051158061277e57508080602001905181019061277e91906131d1565b6126a55760405162461bcd60e51b8152600401610cf7906143a3565b62ffffff81165b82525050565b6020810161131e828461279a565b60008083601f8401126127ca576127ca600080fd5b5081356001600160401b038111156127e4576127e4600080fd5b6020830191508360208202830111156127ff576127ff600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b038211171561284157612841612806565b6040525050565b600061285360405190565b905061285f828261281c565b919050565b60006001600160401b0382111561287d5761287d612806565b5060209081020190565b60006001600160a01b03821661131e565b6128a181612887565b811461157557600080fd5b803561131e81612898565b806128a1565b803561131e816128b7565b6000604082840312156128dd576128dd600080fd5b6128e76040612848565b905060006128f584846128ac565b908201526020612907848483016128bd565b9082015292915050565b600061292461291f84612864565b612848565b8381529050602081016040840283018581111561294357612943600080fd5b835b818110156129675761295787826128c8565b8352602090920191604001612945565b5050509392505050565b600082601f83011261298557612985600080fd5b81356123b7848260208601612911565b60006129a361291f84612864565b838152905060208101604084028301858111156129c2576129c2600080fd5b835b81811015612967576129d687826128c8565b83526020909201916040016129c4565b600082601f8301126129fa576129fa600080fd5b81356123b7848260208601612995565b600060408284031215612a1f57612a1f600080fd5b612a296040612848565b905081356001600160401b03811115612a4457612a44600080fd5b612a5084828501612971565b82525060208201356001600160401b03811115612a6f57612a6f600080fd5b612a7b848285016129e6565b60208301525092915050565b6000806000806000806000806000806000806101008d8f031215612aad57612aad600080fd5b6001600160401b038d351115612ac557612ac5600080fd5b612ad28e8e358f016127b5565b9b509b506001600160401b0360208e01351115612af157612af1600080fd5b612b018e60208f01358f016127b5565b995099506001600160401b0360408e01351115612b2057612b20600080fd5b612b308e60408f01358f016127b5565b975097506001600160401b0360608e01351115612b4f57612b4f600080fd5b612b5f8e60608f01358f016127b5565b955095506001600160401b0360808e01351115612b7e57612b7e600080fd5b612b8e8e60808f01358f01612a0a565b9350612b9d8e60a08f016128bd565b9250612bac8e60c08f016128ac565b9150612bbb8e60e08f016128bd565b90509295989b509295989b509295989b565b600060208284031215612be257612be2600080fd5b81356001600160401b03811115612bfb57612bfb600080fd5b6123b784828501612971565b8015156127a1565b612c198282612c07565b5060200190565b60200190565b6000612c30825190565b808452602093840193830160005b82811015612c63578151612c528782612c0f565b965050602082019150600101612c3e565b5093949350505050565b602080825281016125a48184612c26565b600060608284031215612c9357612c93600080fd5b612c9d6060612848565b90506000612cab84846128bd565b908201526020612cbd848483016128bd565b908201526040612907848483016128ac565b6000612cdd61291f84612864565b83815290506020810160608402830185811115612cfc57612cfc600080fd5b835b8181101561296757612d108782612c7e565b8352602090920191606001612cfe565b600082601f830112612d3457612d34600080fd5b81356123b7848260208601612ccf565b600060608284031215612d5957612d59600080fd5b612d636060612848565b905081356001600160401b03811115612d7e57612d7e600080fd5b612d8a84828501612d20565b8252506020612d9b848483016128ac565b908201526040612907848483016128bd565b6000806000806000806000806000806000806101008d8f031215612dd357612dd3600080fd5b6001600160401b038d351115612deb57612deb600080fd5b612df88e8e358f016127b5565b9b509b506001600160401b0360208e01351115612e1757612e17600080fd5b612e278e60208f01358f016127b5565b995099506001600160401b0360408e01351115612e4657612e46600080fd5b612e568e60408f01358f016127b5565b975097506001600160401b0360608e01351115612e7557612e75600080fd5b612e858e60608f01358f016127b5565b955095506001600160401b0360808e01351115612ea457612ea4600080fd5b612b8e8e60808f01358f01612d44565b62ffffff81166128a1565b803561131e81612eb4565b600080600060608486031215612ee257612ee2600080fd5b6000612eee86866128ac565b9350506020612eff868287016128ac565b9250506040612f1086828701612ebf565b9150509250925092565b60008060408385031215612f3057612f30600080fd5b6000612f3c85856128ac565b9250506020612f4d858286016128ac565b9150509250929050565b6020810161131e8284612c07565b600060208284031215612f7a57612f7a600080fd5b81356001600160401b03811115612f9357612f93600080fd5b6123b7848285016129e6565b6127a181612887565b6020810161131e8284612f9f565b600060408284031215612fcb57612fcb600080fd5b612fd56040612848565b90506000612fe384846128bd565b908201526020612907848483016128ac565b600061300361291f84612864565b8381529050602081016040840283018581111561302257613022600080fd5b835b81811015612967576130368782612fb6565b8352602090920191604001613024565b600082601f83011261305a5761305a600080fd5b81356123b7848260208601612ff5565b6000806040838503121561308057613080600080fd5b82356001600160401b0381111561309957613099600080fd5b612f3c85828601613046565b806127a1565b6020810161131e82846130a5565b612c1982826130a5565b60006130cd825190565b808452602093840193830160005b82811015612c635781516130ef87826130b9565b9650506020820191506001016130db565b602080825281016125a481846130c3565b60006020828403121561312657613126600080fd5b60006123b784846128ac565b6000806040838503121561314857613148600080fd5b600061315485856128ac565b9250506020612f4d858286016128bd565b634e487b7160e01b600052603260045260246000fd5b606081016131898286612f9f565b6131966020830185612f9f565b6123b760408301846130a5565b604081016131b18285612f9f565b6125a46020830184612f9f565b8015156128a1565b805161131e816131be565b6000602082840312156131e6576131e6600080fd5b60006123b784846131c6565b604081016132008285612f9f565b6125a46020830184612c07565b634e487b7160e01b600052601160045260246000fd5b6000600182016132355761323561320d565b5060010190565b805161131e816128b7565b60006020828403121561325c5761325c600080fd5b60006123b7848461323c565b604081016132768285612f9f565b6125a460208301846130a5565b6000823561015e193684900301811261329e5761329e600080fd5b90910192915050565b50600061131e60208301836128ac565b6000808335601e19368590030181126132d2576132d2600080fd5b83016020810192503590506001600160401b038111156132f4576132f4600080fd5b60a0810236038313156127ff576127ff600080fd5b6006811061157557600080fd5b803561131e81613309565b50600061131e6020830183613316565b634e487b7160e01b600052602160045260246000fd5b6006811061157557611575613331565b8061285f81613347565b600061131e82613357565b6127a181613361565b50600061131e60208301836128bd565b61338f8180613321565b613399838261336c565b506133a760208201826132a7565b6133b46020840182612f9f565b506133c26040820182613375565b6133cf60408401826130a5565b506133dd6060820182613375565b6133ea60608401826130a5565b506133f86080820182613375565b6115bb60808401826130a5565b61340f8282613385565b5060a00190565b8183526020830192506000818060005b8581101561344a57816134398882613405565b97505060a082019150600101613426565b509495945050505050565b6000808335601e193685900301811261347057613470600080fd5b83016020810192503590506001600160401b0381111561349257613492600080fd5b60c0810236038313156127ff576127ff600080fd5b6134b18180613321565b6134bb838261336c565b506134c960208201826132a7565b6134d66020840182612f9f565b506134e46040820182613375565b6134f160408401826130a5565b506134ff6060820182613375565b61350c60608401826130a5565b5061351a6080820182613375565b61352760808401826130a5565b5061353560a08201826132a7565b6115bb60a0840182612f9f565b61354c82826134a7565b5060c00190565b8183526020830192506000818060005b8581101561344a57816135768882613542565b97505060c082019150600101613563565b6005811061157557600080fd5b803561131e81613587565b50600061131e6020830183613594565b6005811061157557611575613331565b8061285f816135af565b600061131e826135bf565b6127a1816135c9565b600061016083016135ee83806132a7565b6135f88582612f9f565b5061360660208401846132a7565b6136136020860182612f9f565b5061362160408401846132b7565b8583036040870152613634838284613416565b925050506136456060840184613455565b8583036060870152613658838284613553565b92505050613669608084018461359f565b61367660808601826135d4565b5061368460a0840184613375565b61369160a08601826130a5565b5061369f60c0840184613375565b6136ac60c08601826130a5565b506136ba60e0840184613375565b6136c760e08601826130a5565b506136d6610100840184613375565b6136e46101008601826130a5565b506136f3610120840184613375565b6137016101208601826130a5565b50613710610140840184613375565b61131a6101408601826130a5565b6001600160781b0381166128a1565b803561131e8161371e565b50600061131e602083018361372d565b6001600160781b0381166127a1565b6000808335601e193685900301811261377257613772600080fd5b83016020810192503590506001600160401b0381111561379457613794600080fd5b368190038313156127ff576127ff600080fd5b82818337506000910152565b8183526020830192506137c78284836137a7565b50601f01601f19160190565b600060a083016137e38380613283565b84820385526137f282826135dd565b9150506138026020840184613738565b61380f6020860182613748565b5061381d6040840184613738565b61382a6040860182613748565b506138386060840184613757565b858303606087015261384b8382846137b3565b9250505061385c6080840184613757565b858303608087015261386f8382846137b3565b9695505050505050565b60006125a483836137d3565b60008235609e193684900301811261329e5761329e600080fd5b818352602083019250600083602084028101838060005b878110156138ef5784840389526138cd8284613885565b6138d78582613879565b945050602082016020999099019891506001016138b6565b5091979650505050505050565b6002811061157557600080fd5b803561131e816138fc565b50600061131e6020830183613909565b6002811061157557611575613331565b8061285f81613924565b600061131e82613934565b6127a18161393e565b6000808335601e193685900301811261396d5761396d600080fd5b83016020810192503590506001600160401b0381111561398f5761398f600080fd5b6020810236038313156127ff576127ff600080fd5b81835260208301925060006001600160fb1b038311156139c6576139c6600080fd5b6020830292506139d78385846137a7565b50500190565b600060a083016139ed8380613375565b6139f785826130a5565b50613a056020840184613914565b613a126020860182613949565b50613a206040840184613375565b613a2d60408601826130a5565b50613a3b6060840184613375565b613a4860608601826130a5565b50613a566080840184613952565b858303608087015261386f8382846139a4565b60006125a483836139dd565b818352602083019250600083602084028101838060005b878110156138ef578484038952613aa38284613885565b613aad8582613a69565b94505060208201602099909901989150600101613a8c565b613acf8180613375565b613ad983826130a5565b50613ae76020820182613375565b6115bb60208401826130a5565b613afe8282613ac5565b5060400190565b60400190565b8183526020830192506000818060005b8581101561344a5781613b2e8882613af4565b975050604082019150600101613b1b565b60006123b7848484613b0b565b6000808335601e1936859003018112613b6757613b67600080fd5b83016020810192503590506001600160401b03811115613b8957613b89600080fd5b6040810236038313156127ff576127ff600080fd5b818352602083019250600083602084028101838060005b878110156138ef578484038952613bcc8284613b4c565b613bd7868284613b3f565b95505050613be58260200190565b602099909901989150600101613bb5565b60e08082528101613c08818d8f61389f565b90508181036020830152613c1d818b8d613a75565b90508181036040830152613c3281898b613b9e565b90508181036060830152613c47818789613b9e565b9050613c5660808301866130a5565b613c6360a0830185612f9f565b613c7060c08301846130a5565b9c9b505050505050505050505050565b6000613c8e61291f84612864565b83815290506020808201908402830185811115613cad57613cad600080fd5b835b8181101561296757613cc187826131c6565b835260209283019201613caf565b600082601f830112613ce357613ce3600080fd5b81516123b7848260208601613c80565b805161131e81613309565b805161131e81612898565b600060a08284031215613d1e57613d1e600080fd5b613d2860a0612848565b90506000613d368484613cf3565b908201526020613d4884848301613cfe565b908201526040613d5a8484830161323c565b908201526060613d6c8484830161323c565b90820152608061290784848301613cfe565b600060e08284031215613d9357613d93600080fd5b613d9d6060612848565b90506000613dab8484613d09565b9082015260a0613dbd84848301613cfe565b60208301525060c0613dd18482850161323c565b60408301525092915050565b6000613deb61291f84612864565b83815290506020810160e08402830185811115613e0a57613e0a600080fd5b835b8181101561296757613e1e8782613d7e565b835260209092019160e001613e0c565b600082601f830112613e4257613e42600080fd5b81516123b7848260208601613ddd565b60008060408385031215613e6857613e68600080fd5b82516001600160401b03811115613e8157613e81600080fd5b613e8d85828601613ccf565b92505060208301516001600160401b03811115613eac57613eac600080fd5b612f4d85828601613e2e565b60008235609e1936849003018112613ed257613ed2600080fd5b9190910192915050565b6000823561015e1936849003018112613ed257613ed2600080fd5b6000808335601e1936859003018112613f1257613f12600080fd5b830191505080356001600160401b03811115613f3057613f30600080fd5b60208201915060a0810236038213156127ff576127ff600080fd5b600060208284031215613f6057613f60600080fd5b60006123b78484613316565b600060208284031215613f8157613f81600080fd5b60006123b78484613cfe565b60258152602081017f426174636850757263686173653a20496e73756666696369656e7420616c6c6f81526477616e636560d81b60208201529050613b05565b6020808252810161131e81613f8d565b60008219821115613ff057613ff061320d565b500190565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529050613b05565b6020808252810161131e81613ff5565b60238152602081017f426174636852656769737465723a20496e73756666696369656e742062616c618152626e636560e81b60208201529050613b05565b6020808252810161131e81614046565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152612c20565b6020808252810161131e81614094565b6000828210156140e6576140e661320d565b500390565b6001600160a01b0381166127a1565b80516141068382612f9f565b5060208101516141196020840182612f9f565b50604081015161412c60408401826130a5565b50606081015161413f606084018261279a565b5060808101516115bb60808401826140eb565b60a0810161131e82846140fa565b6001600160a01b0381166128a1565b805161131e81614160565b63ffffffff81166128a1565b805161131e8161417a565b600080600080608085870312156141aa576141aa600080fd5b60006141b6878761323c565b94505060206141c78782880161416f565b93505060406141d887828801614186565b92505060606141e98782880161323c565b91505092959194509250565b6016815260208101750416d6f756e74496e206d757374206265206e6f6e20360541b81529050612c20565b6020808252810161131e816141f5565b601481526020810173496e73756666696369656e742062616c616e636560601b81529050612c20565b6020808252810161131e81614230565b80516142758382612f9f565b5060208101516142886020840182612f9f565b50604081015161429b604084018261279a565b5060608101516142ae6060840182612f9f565b5060808101516142c160808401826130a5565b5060a08101516142d460a08401826130a5565b5060c08101516142e760c08401826130a5565b5060e08101516115bb60e08401826140eb565b610100810161131e8284614269565b60005b8381101561432457818101518382015260200161430c565b83811115614333576000848401525b50505050565b6000614343825190565b614351818560208601614309565b9290920192915050565b61131e8183614339565b600281526020810161534160f01b81529050612c20565b6020808252810161131e81614365565b60028152602081016114d560f21b81529050612c20565b6020808252810161131e8161438c56fea264697066735822122025d8fd45831b31e8298267d896933b4f2f706822b18e9aad047bad759c374bb764736f6c634300080d0033";

type BatchPurchaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchPurchaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchPurchase__factory extends ContractFactory {
  constructor(...args: BatchPurchaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _router: AddressLike,
    _quoter: AddressLike,
    _weth: AddressLike,
    _defaultSwapFee: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _router,
      _quoter,
      _weth,
      _defaultSwapFee,
      overrides || {}
    );
  }
  override deploy(
    _router: AddressLike,
    _quoter: AddressLike,
    _weth: AddressLike,
    _defaultSwapFee: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _router,
      _quoter,
      _weth,
      _defaultSwapFee,
      overrides || {}
    ) as Promise<
      BatchPurchase & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BatchPurchase__factory {
    return super.connect(runner) as BatchPurchase__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchPurchaseInterface {
    return new Interface(_abi) as BatchPurchaseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BatchPurchase {
    return new Contract(address, _abi, runner) as unknown as BatchPurchase;
  }
}
