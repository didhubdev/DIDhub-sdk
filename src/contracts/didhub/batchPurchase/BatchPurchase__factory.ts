/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BatchPurchase, BatchPurchaseInterface } from "./BatchPurchase";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_router",
        type: "address",
      },
      {
        internalType: "contract IQuoterV2",
        name: "_quoter",
        type: "address",
      },
      {
        internalType: "contract IWETH",
        name: "_weth",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "_defaultSwapFee",
        type: "uint24",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvedPairs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IFT[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "batchCheckApprovalERC20",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct INFT[]",
        name: "tokens",
        type: "tuple[]",
      },
    ],
    name: "batchCheckApprovalERC721orERC1155",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultSwapFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "advancedOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "offerFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "considerationFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountInMax",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
            ],
            internalType: "struct Data.SwapPrice[]",
            name: "prices",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
        ],
        internalType: "struct Data.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "fulfillerConduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maximumFulfilled",
        type: "uint256",
      },
    ],
    name: "fulfillAvailableAdvancedListingOrders",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "advancedOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "offerFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "considerationFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "amountOut",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amountInMax",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenContract",
                type: "address",
              },
            ],
            internalType: "struct Data.SwapPrice[]",
            name: "prices",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "paymentMax",
            type: "uint256",
          },
        ],
        internalType: "struct Data.SwapInfo",
        name: "swapInfo",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "fulfillerConduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maximumFulfilled",
        type: "uint256",
      },
    ],
    name: "fulfillAvailableAdvancedListingOrdersERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "offerer",
                type: "address",
              },
              {
                internalType: "address",
                name: "zone",
                type: "address",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                ],
                internalType: "struct OfferItem[]",
                name: "offer",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "enum ItemType",
                    name: "itemType",
                    type: "uint8",
                  },
                  {
                    internalType: "address",
                    name: "token",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "identifierOrCriteria",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "startAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "endAmount",
                    type: "uint256",
                  },
                  {
                    internalType: "address payable",
                    name: "recipient",
                    type: "address",
                  },
                ],
                internalType: "struct ConsiderationItem[]",
                name: "consideration",
                type: "tuple[]",
              },
              {
                internalType: "enum OrderType",
                name: "orderType",
                type: "uint8",
              },
              {
                internalType: "uint256",
                name: "startTime",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "endTime",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "zoneHash",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "salt",
                type: "uint256",
              },
              {
                internalType: "bytes32",
                name: "conduitKey",
                type: "bytes32",
              },
              {
                internalType: "uint256",
                name: "totalOriginalConsiderationItems",
                type: "uint256",
              },
            ],
            internalType: "struct OrderParameters",
            name: "parameters",
            type: "tuple",
          },
          {
            internalType: "uint120",
            name: "numerator",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "denominator",
            type: "uint120",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "extraData",
            type: "bytes",
          },
        ],
        internalType: "struct AdvancedOrder[]",
        name: "advancedOrders",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "enum Side",
            name: "side",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "index",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "identifier",
            type: "uint256",
          },
          {
            internalType: "bytes32[]",
            name: "criteriaProof",
            type: "bytes32[]",
          },
        ],
        internalType: "struct CriteriaResolver[]",
        name: "criteriaResolvers",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "offerFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "orderIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "itemIndex",
            type: "uint256",
          },
        ],
        internalType: "struct FulfillmentComponent[][]",
        name: "considerationFulfillments",
        type: "tuple[][]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct INFT[]",
        name: "nftFullfillments",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "fulfillerConduitKey",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "maximumFulfilled",
        type: "uint256",
      },
    ],
    name: "fulfillAvailableAdvancedOfferOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
        ],
        internalType: "struct Data.DomainPriceInfo[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "getIndividualPrice",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenContract",
            type: "address",
          },
        ],
        internalType: "struct Data.DomainPriceInfo[]",
        name: "prices",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
    ],
    name: "getTotalPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "swapFee",
        type: "uint24",
      },
    ],
    name: "setSpecificSwapFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "specificSwapFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e0604052731e0049783f008a0085193e00003d00cd54003c716080526cadc04c56bf30ac9d3c0aaf14dc60a081905260c0526000196004553480156200004557600080fd5b50604051620040983803806200409883398101604081905262000068916200018a565b83836200007533620000da565b600180546001600160a01b03199081166001600160a01b039485161790915560028054909116918316919091179055600680546001600160b81b0319166301000000949092169390930262ffffff19161762ffffff9190911617905550620001f89050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b600062000137826200012a565b62000155816200013d565b81146200016157600080fd5b50565b805162000137816200014a565b62ffffff811662000155565b8051620001378162000171565b60008060008060808587031215620001a557620001a5600080fd5b6000620001b3878762000164565b9450506020620001c68782880162000164565b9350506040620001d98782880162000164565b9250506060620001ec878288016200017d565b91505092959194509250565b60805160a05160c051613e46620002526000396000818161064d01528181610b540152610bf3015260008181610a090152610ab90152600081816112b10152818161136201528181611a210152611ad20152613e466000f3fe6080604052600436106100ec5760003560e01c806384954f9a1161008a578063b25326c911610059578063b25326c9146102ac578063dc1ff860146102d9578063f2fde38b14610306578063f3fef3a31461032657600080fd5b806384954f9a1461023357806389aa79e3146102535780638da5cb5b14610273578063aafb28571461029957600080fd5b8063715018a6116100c6578063715018a61461017957806375e02b981461018e5780637e0fc3ca146101ae57806382713084146101f657600080fd5b806303df7396146100f85780633ed5c2721461012a5780635ed74f981461015757600080fd5b366100f357005b600080fd5b34801561010457600080fd5b506006546101149062ffffff1681565b6040516101219190612339565b60405180910390f35b34801561013657600080fd5b5061014a6101453660046124d6565b610346565b6040516101219190612576565b34801561016357600080fd5b50610177610172366004612707565b610523565b005b34801561018557600080fd5b50610177610784565b34801561019a57600080fd5b506101776101a9366004612863565b610798565b3480156101ba57600080fd5b506101e96101c93660046128b3565b600360209081526000928352604080842090915290825290205460ff1681565b60405161012191906128f0565b34801561020257600080fd5b506101146102113660046128b3565b600560209081526000928352604080842090915290825290205462ffffff1681565b34801561023f57600080fd5b5061014a61024e366004612973565b6107e0565b34801561025f57600080fd5b5061017761026e3660046129ad565b610915565b34801561027f57600080fd5b506000546001600160a01b03166040516101219190612abd565b6101776102a7366004612707565b610be4565b3480156102b857600080fd5b506102cc6102c7366004612b7f565b610cd3565b6040516101219190612bc0565b3480156102e557600080fd5b506102f96102f4366004612b7f565b610eb6565b6040516101219190612c15565b34801561031257600080fd5b50610177610321366004612c26565b6110d0565b34801561033257600080fd5b50610177610341366004612c47565b61110a565b6060600082516001600160401b0381111561036357610363612347565b60405190808252806020026020018201604052801561038c578160200160208202803683370190505b50905060005b835181101561051c57306001600160a01b03168482815181106103b7576103b7612c7a565b6020026020010151600001516001600160a01b031663081812fc8684815181106103e3576103e3612c7a565b6020026020010151602001516040518263ffffffff1660e01b815260040161040b9190612bc0565b602060405180830381865afa158015610428573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044c9190612c9b565b6001600160a01b031614806104e8575083818151811061046e5761046e612c7a565b6020026020010151600001516001600160a01b031663e985e9c533306040518363ffffffff1660e01b81526004016104a7929190612cbc565b602060405180830381865afa1580156104c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e89190612cea565b8282815181106104fa576104fa612c7a565b911515602092830291909101909101528061051481612d21565b915050610392565b5092915050565b836040015184602001516001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b815260040161055a929190612cbc565b602060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b9190612d45565b11156105c25760405162461bcd60e51b81526004016105b990612da8565b60405180910390fd5b83602001516001600160a01b03166323b872dd333087604001516040518463ffffffff1660e01b81526004016105fa93929190612db8565b6020604051808303816000875af1158015610619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063d9190612cea565b506000610649856111c3565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387201b418e8e8e8e8e8e8e8e8d8d8d6040518c63ffffffff1660e01b81526004016106ab9b9a9998979695949392919061374d565b6000604051808303816000875af11580156106ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106f2919081019061399e565b5050805115610775576020850151815160405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb9161073091339190600401613a04565b6020604051808303816000875af115801561074f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107739190612cea565b505b50505050505050505050505050565b61078c6117bf565b61079660006117e9565b565b6107a06117bf565b6001600160a01b03928316600090815260056020908152604080832094909516825292909252919020805462ffffff191662ffffff909216919091179055565b6060600082516001600160401b038111156107fd576107fd612347565b604051908082528060200260200182016040528015610826578160200160208202803683370190505b50905060005b835181101561051c5783818151811061084757610847612c7a565b60200260200101516020015184828151811061086557610865612c7a565b6020026020010151600001516001600160a01b031663dd62ed3e33306040518363ffffffff1660e01b815260040161089e929190612cbc565b602060405180830381865afa1580156108bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108df9190612d45565b10158282815181106108f3576108f3612c7a565b911515602092830291909101909101528061090d81612d21565b91505061082c565b60005b8451811015610b3c5784818151811061093357610933612c7a565b6020026020010151600001516001600160a01b03166323b872dd333088858151811061096157610961612c7a565b6020026020010151602001516040518463ffffffff1660e01b815260040161098b93929190612db8565b600060405180830381600087803b1580156109a557600080fd5b505af11580156109b9573d6000803e3d6000fd5b505050508481815181106109cf576109cf612c7a565b6020026020010151600001516001600160a01b031663e985e9c58683815181106109fb576109fb612c7a565b6020026020010151600001517f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401610a45929190612cbc565b602060405180830381865afa158015610a62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a869190612cea565b15610b2a57848181518110610a9d57610a9d612c7a565b6020026020010151600001516001600160a01b031663a22cb4657f000000000000000000000000000000000000000000000000000000000000000060016040518363ffffffff1660e01b8152600401610af7929190613a1f565b600060405180830381600087803b158015610b1157600080fd5b505af1158015610b25573d6000803e3d6000fd5b505050505b80610b3481612d21565b915050610918565b506040516387201b4160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906387201b4190610b9d908f908f908f908f908f908f908f908f908e908e908e9060040161374d565b6000604051808303816000875af1158015610bbc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610773919081019061399e565b6000610bef85611839565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166387201b4182602001518f8f8f8f8f8f8f8f8e8e8e6040518d63ffffffff1660e01b8152600401610c569b9a9998979695949392919061374d565b60006040518083038185885af1158015610c74573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052610c9d919081019061399e565b5050805115610775578051604051339180156108fc02916000818181858888f19350505050158015610773573d6000803e3d6000fd5b600080805b8451811015610eac576000858281518110610cf557610cf5612c7a565b60200260200101519050846001600160a01b031681602001516001600160a01b031614158015610d51575060208101516001600160a01b0316158015610d4f57506006546001600160a01b03868116630100000090920416145b155b8015610d8a575060065460208201516001600160a01b03908116630100000090920416148015610d8857506001600160a01b038516155b155b15610e8a5760006001600160a01b03861615610da65785610dba565b600654630100000090046001600160a01b03165b60208301519091506000906001600160a01b031615610ddd578260200151610df1565b600654630100000090046001600160a01b03165b6001600160a01b0380841660009081526005602090815260408083209385168352929052908120549192509062ffffff16610e335760065462ffffff16610e5f565b6001600160a01b0380841660009081526005602090815260408083209386168352929052205462ffffff165b90506000610e738484876000015185611e95565b9050610e7f8188613a3a565b965050505050610e99565b8051610e969084613a3a565b92505b5080610ea481612d21565b915050610cd8565b5090505b92915050565b6060600083516001600160401b03811115610ed357610ed3612347565b604051908082528060200260200182016040528015610efc578160200160208202803683370190505b50905060005b8451811015610eac576000858281518110610f1f57610f1f612c7a565b60200260200101519050846001600160a01b031681602001516001600160a01b031614158015610f7b575060208101516001600160a01b0316158015610f7957506006546001600160a01b03868116630100000090920416145b155b1561108e5760006001600160a01b03861615610f975785610fab565b600654630100000090046001600160a01b03165b60208301519091506000906001600160a01b031615610fce578260200151610fe2565b600654630100000090046001600160a01b03165b6001600160a01b0380841660009081526005602090815260408083209385168352929052908120549192509062ffffff166110245760065462ffffff16611050565b6001600160a01b0380841660009081526005602090815260408083209386168352929052205462ffffff165b905060006110648484876000015185611e95565b90508087878151811061107957611079612c7a565b602002602001018181525050505050506110bd565b80600001518383815181106110a5576110a5612c7a565b602002602001018181516110b99190613a3a565b9052505b50806110c881612d21565b915050610f02565b6110d86117bf565b6001600160a01b0381166110fe5760405162461bcd60e51b81526004016105b990613a93565b611107816117e9565b50565b6111126117bf565b6001600160a01b03821661115257604051339082156108fc029083906000818181858888f1935050505015801561114d573d6000803e3d6000fd5b505050565b60405163a9059cbb60e01b81526001600160a01b0383169063a9059cbb906111809033908590600401613a04565b6020604051808303816000875af115801561119f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114d9190612cea565b60408051808201909152600080825260208201526040820151602083015183516000805b82518110156117a35782818151811061120257611202612c7a565b60200260200101516020015185101561122d5760405162461bcd60e51b81526004016105b990613ae1565b60006001600160a01b031683828151811061124a5761124a612c7a565b6020026020010151604001516001600160a01b0316146113e65782818151811061127657611276612c7a565b60200260200101516020015183828151811061129457611294612c7a565b6020026020010151604001516001600160a01b031663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016112ed929190612cbc565b602060405180830381865afa15801561130a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061132e9190612d45565b10156113e65782818151811061134657611346612c7a565b6020026020010151604001516001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006004546040518363ffffffff1660e01b81526004016113a1929190613a04565b6020604051808303816000875af11580156113c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e49190612cea565b505b60006001600160a01b031683828151811061140357611403612c7a565b6020026020010151604001516001600160a01b031603611627576006546001600160a01b038581166301000000909204161461152d576001600160a01b0380851660009081526005602090815260408083206006546301000000900490941683529290529081205462ffffff166114815760065462ffffff166114b7565b6001600160a01b038086166000908152600560209081526040808320600654630100000090049094168352929052205462ffffff165b9050600061151886600660039054906101000a90046001600160a01b03168786815181106114e7576114e7612c7a565b60200260200101516020015188878151811061150557611505612c7a565b6020026020010151600001513087611f51565b9050611524878261212a565b96505050611560565b61155d83828151811061154257611542612c7a565b6020026020010151600001518661212a90919063ffffffff16565b94505b600660039054906101000a90046001600160a01b03166001600160a01b0316632e1a7d4d84838151811061159657611596612c7a565b6020026020010151600001516040518263ffffffff1660e01b81526004016115be9190612bc0565b600060405180830381600087803b1580156115d857600080fd5b505af11580156115ec573d6000803e3d6000fd5b5050505061162083828151811061160557611605612c7a565b6020026020010151600001518361213d90919063ffffffff16565b9150611791565b836001600160a01b031683828151811061164357611643612c7a565b6020026020010151604001516001600160a01b0316036116795761167283828151811061154257611542612c7a565b9450611791565b6001600160a01b0384166000908152600560205260408120845182919082908790869081106116aa576116aa612c7a565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff16116116ea5760065462ffffff16611748565b6001600160a01b0385166000908152600560205260408120855190919086908590811061171957611719612c7a565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff165b905060006117808686858151811061176257611762612c7a565b6020026020010151604001518786815181106114e7576114e7612c7a565b905061178c878261212a565b965050505b8061179b81612d21565b9150506111e7565b5060408051808201909152938452602084015250909392505050565b6000546001600160a01b031633146107965760405162461bcd60e51b81526004016105b990613b21565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080518082019091526000808252602082015281513490600080805b8351811015611dfc5783818151811061187157611871612c7a565b60200260200101516020015185101561189c5760405162461bcd60e51b81526004016105b990613ae1565b600660039054906101000a90046001600160a01b03166001600160a01b03168482815181106118cd576118cd612c7a565b6020026020010151604001516001600160a01b03160361199d57600660039054906101000a90046001600160a01b03166001600160a01b031663d0e30db085838151811061191d5761191d612c7a565b6020026020010151600001516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561195457600080fd5b505af1158015611968573d6000803e3d6000fd5b505050505083818151811061197f5761197f612c7a565b602002602001015160000151856119969190613b31565b9450611dea565b60006001600160a01b03168482815181106119ba576119ba612c7a565b6020026020010151604001516001600160a01b031614611d93578381815181106119e6576119e6612c7a565b602002602001015160200151848281518110611a0457611a04612c7a565b6020026020010151604001516001600160a01b031663dd62ed3e307f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b8152600401611a5d929190612cbc565b602060405180830381865afa158015611a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9e9190612d45565b1015611b5657838181518110611ab657611ab6612c7a565b6020026020010151604001516001600160a01b031663095ea7b37f00000000000000000000000000000000000000000000000000000000000000006004546040518363ffffffff1660e01b8152600401611b11929190613a04565b6020604051808303816000875af1158015611b30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b549190612cea565b505b600660039054906101000a90046001600160a01b03166001600160a01b031663d0e30db0858381518110611b8c57611b8c612c7a565b6020026020010151602001516040518263ffffffff1660e01b81526004016000604051808303818588803b158015611bc357600080fd5b505af1158015611bd7573d6000803e3d6000fd5b5050600654630100000090046001600160a01b03166000908152600560205260408120885191945084935091508290889086908110611c1857611c18612c7a565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff1611611c585760065462ffffff16611cbf565b600654630100000090046001600160a01b031660009081526005602052604081208651909190879085908110611c9057611c90612c7a565b6020908102919091018101516040908101516001600160a01b0316835290820192909252016000205462ffffff165b90506000611d2a600660039054906101000a90046001600160a01b0316878581518110611cee57611cee612c7a565b602002602001015160400151888681518110611d0c57611d0c612c7a565b60200260200101516020015189878151811061150557611505612c7a565b905080868481518110611d3f57611d3f612c7a565b602002602001015160200151611d559190613b31565b611d5f9085613a3a565b9350858381518110611d7357611d73612c7a565b60200260200101516020015187611d8a9190613b31565b96505050611dea565b838181518110611da557611da5612c7a565b60200260200101516000015185611dbc9190613b31565b9450838181518110611dd057611dd0612c7a565b60200260200101516000015183611de79190613a3a565b92505b80611df481612d21565b915050611856565b508015611e6c57600654604051632e1a7d4d60e01b815263010000009091046001600160a01b031690632e1a7d4d90611e39908490600401612bc0565b600060405180830381600087803b158015611e5357600080fd5b505af1158015611e67573d6000803e3d6000fd5b505050505b60405180604001604052808286611e839190613a3a565b81526020019290925250949350505050565b6002546040805160a0810182526001600160a01b038781168252868116602083015281830186905262ffffff851660608301526000608083018190529251635e90b82560e11b815292938493849384938493169163bd21704a91611efb91600401613baf565b6080604051808303816000875af1158015611f1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f3e9190613bee565b509196505050505050505b949350505050565b6000808511611f725760405162461bcd60e51b81526004016105b990613c7d565b6040516370a0823160e01b815285906001600160a01b038916906370a0823190611fa0903090600401612abd565b602060405180830381865afa158015611fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fe19190612d45565b1015611fff5760405162461bcd60e51b81526004016105b990613cb6565b6001546120179088906001600160a01b031687612149565b600061202442600f613a3a565b60408051610100810182526001600160a01b03808c1682528a8116602083015262ffffff87168284015287811660608301526080820184905260a0820189905260c082018a9052600060e083018190526001549351631b67c43360e31b8152949550939192849291169063db3e2198906120a2908590600401613d57565b6020604051808303816000875af11580156120c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120e59190612d45565b90508881101561211c57600154612108908c906001600160a01b03166000612149565b61211c8b30612117848d613b31565b61223e565b9a9950505050505050505050565b60006121368284613b31565b9392505050565b60006121368284613a3a565b600080846001600160a01b031663095ea7b360e01b8585604051602401612171929190613a04565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516121af9190613db8565b6000604051808303816000865af19150503d80600081146121ec576040519150601f19603f3d011682016040523d82523d6000602084013e6121f1565b606091505b509150915081801561221b57508051158061221b57508080602001905181019061221b9190612cea565b6122375760405162461bcd60e51b81526004016105b990613dd9565b5050505050565b600080846001600160a01b031663a9059cbb60e01b8585604051602401612266929190613a04565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516122a49190613db8565b6000604051808303816000865af19150503d80600081146122e1576040519150601f19603f3d011682016040523d82523d6000602084013e6122e6565b606091505b50915091508180156123105750805115806123105750808060200190518101906123109190612cea565b6122375760405162461bcd60e51b81526004016105b990613e00565b62ffffff81165b82525050565b60208101610eb0828461232c565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b038211171561238257612382612347565b6040525050565b600061239460405190565b90506123a0828261235d565b919050565b60006001600160401b038211156123be576123be612347565b5060209081020190565b60006001600160a01b038216610eb0565b6123e2816123c8565b811461110757600080fd5b8035610eb0816123d9565b806123e2565b8035610eb0816123f8565b60006040828403121561241e5761241e600080fd5b6124286040612389565b9050600061243684846123ed565b908201526020612448848483016123fe565b9082015292915050565b6000612465612460846123a5565b612389565b8381529050602081016040840283018581111561248457612484600080fd5b835b818110156124a8576124988782612409565b8352602090920191604001612486565b5050509392505050565b600082601f8301126124c6576124c6600080fd5b8135611f49848260208601612452565b6000602082840312156124eb576124eb600080fd5b81356001600160401b0381111561250457612504600080fd5b611f49848285016124b2565b801515612333565b6125228282612510565b5060200190565b60200190565b6000612539825190565b808452602093840193830160005b8281101561256c57815161255b8782612518565b965050602082019150600101612547565b5093949350505050565b60208082528101612136818461252f565b60008083601f84011261259c5761259c600080fd5b5081356001600160401b038111156125b6576125b6600080fd5b6020830191508360208202830111156125d1576125d1600080fd5b9250929050565b6000606082840312156125ed576125ed600080fd5b6125f76060612389565b9050600061260584846123fe565b908201526020612617848483016123fe565b908201526040612448848483016123ed565b6000612637612460846123a5565b8381529050602081016060840283018581111561265657612656600080fd5b835b818110156124a85761266a87826125d8565b8352602090920191606001612658565b600082601f83011261268e5761268e600080fd5b8135611f49848260208601612629565b6000606082840312156126b3576126b3600080fd5b6126bd6060612389565b905081356001600160401b038111156126d8576126d8600080fd5b6126e48482850161267a565b82525060206126f5848483016123ed565b908201526040612448848483016123fe565b6000806000806000806000806000806000806101008d8f03121561272d5761272d600080fd5b6001600160401b038d35111561274557612745600080fd5b6127528e8e358f01612587565b9b509b506001600160401b0360208e0135111561277157612771600080fd5b6127818e60208f01358f01612587565b995099506001600160401b0360408e013511156127a0576127a0600080fd5b6127b08e60408f01358f01612587565b975097506001600160401b0360608e013511156127cf576127cf600080fd5b6127df8e60608f01358f01612587565b955095506001600160401b0360808e013511156127fe576127fe600080fd5b61280e8e60808f01358f0161269e565b935061281d8e60a08f016123fe565b925061282c8e60c08f016123ed565b915061283b8e60e08f016123fe565b90509295989b509295989b509295989b565b62ffffff81166123e2565b8035610eb08161284d565b60008060006060848603121561287b5761287b600080fd5b600061288786866123ed565b9350506020612898868287016123ed565b92505060406128a986828701612858565b9150509250925092565b600080604083850312156128c9576128c9600080fd5b60006128d585856123ed565b92505060206128e6858286016123ed565b9150509250929050565b60208101610eb08284612510565b600061290c612460846123a5565b8381529050602081016040840283018581111561292b5761292b600080fd5b835b818110156124a85761293f8782612409565b835260209092019160400161292d565b600082601f83011261296357612963600080fd5b8135611f498482602086016128fe565b60006020828403121561298857612988600080fd5b81356001600160401b038111156129a1576129a1600080fd5b611f498482850161294f565b6000806000806000806000806000806000806101008d8f0312156129d3576129d3600080fd5b6001600160401b038d3511156129eb576129eb600080fd5b6129f88e8e358f01612587565b9b509b506001600160401b0360208e01351115612a1757612a17600080fd5b612a278e60208f01358f01612587565b995099506001600160401b0360408e01351115612a4657612a46600080fd5b612a568e60408f01358f01612587565b975097506001600160401b0360608e01351115612a7557612a75600080fd5b612a858e60608f01358f01612587565b955095506001600160401b0360808e01351115612aa457612aa4600080fd5b61280e8e60808f01358f016124b2565b612333816123c8565b60208101610eb08284612ab4565b600060408284031215612ae057612ae0600080fd5b612aea6040612389565b90506000612af884846123fe565b908201526020612448848483016123ed565b6000612b18612460846123a5565b83815290506020810160408402830185811115612b3757612b37600080fd5b835b818110156124a857612b4b8782612acb565b8352602090920191604001612b39565b600082601f830112612b6f57612b6f600080fd5b8135611f49848260208601612b0a565b60008060408385031215612b9557612b95600080fd5b82356001600160401b03811115612bae57612bae600080fd5b6128d585828601612b5b565b80612333565b60208101610eb08284612bba565b6125228282612bba565b6000612be2825190565b808452602093840193830160005b8281101561256c578151612c048782612bce565b965050602082019150600101612bf0565b602080825281016121368184612bd8565b600060208284031215612c3b57612c3b600080fd5b6000611f4984846123ed565b60008060408385031215612c5d57612c5d600080fd5b6000612c6985856123ed565b92505060206128e6858286016123fe565b634e487b7160e01b600052603260045260246000fd5b8051610eb0816123d9565b600060208284031215612cb057612cb0600080fd5b6000611f498484612c90565b60408101612cca8285612ab4565b6121366020830184612ab4565b8015156123e2565b8051610eb081612cd7565b600060208284031215612cff57612cff600080fd5b6000611f498484612cdf565b634e487b7160e01b600052601160045260246000fd5b600060018201612d3357612d33612d0b565b5060010190565b8051610eb0816123f8565b600060208284031215612d5a57612d5a600080fd5b6000611f498484612d3a565b60258152602081017f426174636850757263686173653a20496e73756666696369656e7420616c6c6f81526477616e636560d81b602082015290505b60400190565b60208082528101610eb081612d66565b60608101612dc68286612ab4565b612dd36020830185612ab4565b611f496040830184612bba565b6000823561015e1936849003018112612dfb57612dfb600080fd5b90910192915050565b506000610eb060208301836123ed565b6000808335601e1936859003018112612e2f57612e2f600080fd5b83016020810192503590506001600160401b03811115612e5157612e51600080fd5b60a0810236038313156125d1576125d1600080fd5b6006811061110757600080fd5b8035610eb081612e66565b506000610eb06020830183612e73565b634e487b7160e01b600052602160045260246000fd5b6006811061110757611107612e8e565b806123a081612ea4565b6000610eb082612eb4565b61233381612ebe565b506000610eb060208301836123fe565b612eec8180612e7e565b612ef68382612ec9565b50612f046020820182612e04565b612f116020840182612ab4565b50612f1f6040820182612ed2565b612f2c6040840182612bba565b50612f3a6060820182612ed2565b612f476060840182612bba565b50612f556080820182612ed2565b61114d6080840182612bba565b612f6c8282612ee2565b5060a00190565b8183526020830192506000818060005b85811015612fa75781612f968882612f62565b97505060a082019150600101612f83565b509495945050505050565b6000808335601e1936859003018112612fcd57612fcd600080fd5b83016020810192503590506001600160401b03811115612fef57612fef600080fd5b60c0810236038313156125d1576125d1600080fd5b61300e8180612e7e565b6130188382612ec9565b506130266020820182612e04565b6130336020840182612ab4565b506130416040820182612ed2565b61304e6040840182612bba565b5061305c6060820182612ed2565b6130696060840182612bba565b506130776080820182612ed2565b6130846080840182612bba565b5061309260a0820182612e04565b61114d60a0840182612ab4565b6130a98282613004565b5060c00190565b8183526020830192506000818060005b85811015612fa757816130d3888261309f565b97505060c0820191506001016130c0565b6005811061110757600080fd5b8035610eb0816130e4565b506000610eb060208301836130f1565b6005811061110757611107612e8e565b806123a08161310c565b6000610eb08261311c565b61233381613126565b6000610160830161314b8380612e04565b6131558582612ab4565b506131636020840184612e04565b6131706020860182612ab4565b5061317e6040840184612e14565b8583036040870152613191838284612f73565b925050506131a26060840184612fb2565b85830360608701526131b58382846130b0565b925050506131c660808401846130fc565b6131d36080860182613131565b506131e160a0840184612ed2565b6131ee60a0860182612bba565b506131fc60c0840184612ed2565b61320960c0860182612bba565b5061321760e0840184612ed2565b61322460e0860182612bba565b50613233610100840184612ed2565b613241610100860182612bba565b50613250610120840184612ed2565b61325e610120860182612bba565b5061326d610140840184612ed2565b610eac610140860182612bba565b6001600160781b0381166123e2565b8035610eb08161327b565b506000610eb0602083018361328a565b6001600160781b038116612333565b6000808335601e19368590030181126132cf576132cf600080fd5b83016020810192503590506001600160401b038111156132f1576132f1600080fd5b368190038313156125d1576125d1600080fd5b82818337506000910152565b818352602083019250613324828483613304565b50601f01601f19160190565b600060a083016133408380612de0565b848203855261334f828261313a565b91505061335f6020840184613295565b61336c60208601826132a5565b5061337a6040840184613295565b61338760408601826132a5565b5061339560608401846132b4565b85830360608701526133a8838284613310565b925050506133b960808401846132b4565b85830360808701526133cc838284613310565b9695505050505050565b60006121368383613330565b60008235609e1936849003018112612dfb57612dfb600080fd5b818352602083019250600083602084028101838060005b8781101561344c57848403895261342a82846133e2565b61343485826133d6565b94505060208201602099909901989150600101613413565b5091979650505050505050565b6002811061110757600080fd5b8035610eb081613459565b506000610eb06020830183613466565b6002811061110757611107612e8e565b806123a081613481565b6000610eb082613491565b6123338161349b565b6000808335601e19368590030181126134ca576134ca600080fd5b83016020810192503590506001600160401b038111156134ec576134ec600080fd5b6020810236038313156125d1576125d1600080fd5b81835260208301925060006001600160fb1b0383111561352357613523600080fd5b602083029250613534838584613304565b50500190565b600060a0830161354a8380612ed2565b6135548582612bba565b506135626020840184613471565b61356f60208601826134a6565b5061357d6040840184612ed2565b61358a6040860182612bba565b506135986060840184612ed2565b6135a56060860182612bba565b506135b360808401846134af565b85830360808701526133cc838284613501565b6000612136838361353a565b818352602083019250600083602084028101838060005b8781101561344c57848403895261360082846133e2565b61360a85826135c6565b945050602082016020999099019891506001016135e9565b61362c8180612ed2565b6136368382612bba565b506136446020820182612ed2565b61114d6020840182612bba565b61365b8282613622565b5060400190565b8183526020830192506000818060005b85811015612fa757816136858882613651565b975050604082019150600101613672565b6000611f49848484613662565b6000808335601e19368590030181126136be576136be600080fd5b83016020810192503590506001600160401b038111156136e0576136e0600080fd5b6040810236038313156125d1576125d1600080fd5b818352602083019250600083602084028101838060005b8781101561344c57848403895261372382846136a3565b61372e868284613696565b9550505061373c8260200190565b60209990990198915060010161370c565b60e0808252810161375f818d8f6133fc565b90508181036020830152613774818b8d6135d2565b9050818103604083015261378981898b6136f5565b9050818103606083015261379e8187896136f5565b90506137ad6080830186612bba565b6137ba60a0830185612ab4565b6137c760c0830184612bba565b9c9b505050505050505050505050565b60006137e5612460846123a5565b8381529050602080820190840283018581111561380457613804600080fd5b835b818110156124a8576138188782612cdf565b835260209283019201613806565b600082601f83011261383a5761383a600080fd5b8151611f498482602086016137d7565b8051610eb081612e66565b600060a0828403121561386a5761386a600080fd5b61387460a0612389565b90506000613882848461384a565b90820152602061389484848301612c90565b9082015260406138a684848301612d3a565b9082015260606138b884848301612d3a565b90820152608061244884848301612c90565b600060e082840312156138df576138df600080fd5b6138e96060612389565b905060006138f78484613855565b9082015260a061390984848301612c90565b60208301525060c061391d84828501612d3a565b60408301525092915050565b6000613937612460846123a5565b83815290506020810160e0840283018581111561395657613956600080fd5b835b818110156124a85761396a87826138ca565b835260209092019160e001613958565b600082601f83011261398e5761398e600080fd5b8151611f49848260208601613929565b600080604083850312156139b4576139b4600080fd5b82516001600160401b038111156139cd576139cd600080fd5b6139d985828601613826565b92505060208301516001600160401b038111156139f8576139f8600080fd5b6128e68582860161397a565b60408101613a128285612ab4565b6121366020830184612bba565b60408101613a2d8285612ab4565b6121366020830184612510565b60008219821115613a4d57613a4d612d0b565b500190565b60268152602081017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529050612da2565b60208082528101610eb081613a52565b60238152602081017f426174636852656769737465723a20496e73756666696369656e742062616c618152626e636560e81b60208201529050612da2565b60208082528101610eb081613aa3565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152612529565b60208082528101610eb081613af1565b600082821015613b4357613b43612d0b565b500390565b6001600160a01b038116612333565b8051613b638382612ab4565b506020810151613b766020840182612ab4565b506040810151613b896040840182612bba565b506060810151613b9c606084018261232c565b50608081015161114d6080840182613b48565b60a08101610eb08284613b57565b6001600160a01b0381166123e2565b8051610eb081613bbd565b63ffffffff81166123e2565b8051610eb081613bd7565b60008060008060808587031215613c0757613c07600080fd5b6000613c138787612d3a565b9450506020613c2487828801613bcc565b9350506040613c3587828801613be3565b9250506060613c4687828801612d3a565b91505092959194509250565b6016815260208101750416d6f756e74496e206d757374206265206e6f6e20360541b81529050612529565b60208082528101610eb081613c52565b601481526020810173496e73756666696369656e742062616c616e636560601b81529050612529565b60208082528101610eb081613c8d565b8051613cd28382612ab4565b506020810151613ce56020840182612ab4565b506040810151613cf8604084018261232c565b506060810151613d0b6060840182612ab4565b506080810151613d1e6080840182612bba565b5060a0810151613d3160a0840182612bba565b5060c0810151613d4460c0840182612bba565b5060e081015161114d60e0840182613b48565b6101008101610eb08284613cc6565b60005b83811015613d81578181015183820152602001613d69565b83811115613d90576000848401525b50505050565b6000613da0825190565b613dae818560208601613d66565b9290920192915050565b610eb08183613d96565b600281526020810161534160f01b81529050612529565b60208082528101610eb081613dc2565b60028152602081016114d560f21b81529050612529565b60208082528101610eb081613de956fea2646970667358221220007f6a7121b3c6087bc179796e3bc667b6d161c3c2c4b19c35452ee5435eaf1e64736f6c634300080d0033";

type BatchPurchaseConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchPurchaseConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchPurchase__factory extends ContractFactory {
  constructor(...args: BatchPurchaseConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _router: string,
    _quoter: string,
    _weth: string,
    _defaultSwapFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchPurchase> {
    return super.deploy(
      _router,
      _quoter,
      _weth,
      _defaultSwapFee,
      overrides || {}
    ) as Promise<BatchPurchase>;
  }
  getDeployTransaction(
    _router: string,
    _quoter: string,
    _weth: string,
    _defaultSwapFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _router,
      _quoter,
      _weth,
      _defaultSwapFee,
      overrides || {}
    );
  }
  attach(address: string): BatchPurchase {
    return super.attach(address) as BatchPurchase;
  }
  connect(signer: Signer): BatchPurchase__factory {
    return super.connect(signer) as BatchPurchase__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchPurchaseInterface {
    return new utils.Interface(_abi) as BatchPurchaseInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchPurchase {
    return new Contract(address, _abi, signerOrProvider) as BatchPurchase;
  }
}
